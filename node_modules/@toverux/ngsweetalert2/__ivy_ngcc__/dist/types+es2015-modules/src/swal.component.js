import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';
import swal from 'sweetalert2';
import { SWAL_DEFAULTS } from './di';
import * as ɵngcc0 from '@angular/core';
var SwalComponent = (function () {
    function SwalComponent(defaultSwalOptions) {
        this.defaultSwalOptions = defaultSwalOptions;
        this.confirm = new EventEmitter();
        this.cancel = new EventEmitter();
        this.show = this.show.bind(this);
    }
    SwalComponent.prototype.show = function () {
        var _this = this;
        var options = Object.assign({
            type: this.type,
            title: this.title,
            text: this.text,
            html: this.html,
        }, this.defaultSwalOptions, this.options);
        var promise = swal(options);
        promise.then(function (success) { return _this.confirm.emit(success); }, function (dismiss) { return _this.cancel.emit(dismiss); });
        return promise;
    };
SwalComponent.ɵfac = function SwalComponent_Factory(t) { return new (t || SwalComponent)(ɵngcc0.ɵɵdirectiveInject(SWAL_DEFAULTS)); };
SwalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwalComponent, selectors: [["swal"]], inputs: { type: "type", title: "title", text: "text", html: "html", options: "options" }, outputs: { confirm: "confirm", cancel: "cancel" }, decls: 0, vars: 0, template: function SwalComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwalComponent, [{
        type: Component,
        args: [{
                selector: 'swal',
                template: ''
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [SWAL_DEFAULTS]
            }] }]; }, { confirm: [{
            type: Output
        }], cancel: [{
            type: Output
        }], type: [{
            type: Input
        }], title: [{
            type: Input
        }], text: [{
            type: Input
        }], html: [{
            type: Input
        }], options: [{
            type: Input
        }] }); })();
    return SwalComponent;
}());
export { SwalComponent };
/** @nocollapse */
SwalComponent.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Inject, args: [SWAL_DEFAULTS,] },] },
]; };
SwalComponent.propDecorators = {
    'type': [{ type: Input },],
    'title': [{ type: Input },],
    'text': [{ type: Input },],
    'html': [{ type: Input },],
    'options': [{ type: Input },],
    'confirm': [{ type: Output },],
    'cancel': [{ type: Output },],
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhbC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbInN3YWwuY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQU07QUFDTjtBQUNBO0FBQ0EseUJBTUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbmplY3QsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCBzd2FsIGZyb20gJ3N3ZWV0YWxlcnQyJztcbmltcG9ydCB7IFNXQUxfREVGQVVMVFMgfSBmcm9tICcuL2RpJztcbnZhciBTd2FsQ29tcG9uZW50ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTd2FsQ29tcG9uZW50KGRlZmF1bHRTd2FsT3B0aW9ucykge1xuICAgICAgICB0aGlzLmRlZmF1bHRTd2FsT3B0aW9ucyA9IGRlZmF1bHRTd2FsT3B0aW9ucztcbiAgICAgICAgdGhpcy5jb25maXJtID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmNhbmNlbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5zaG93ID0gdGhpcy5zaG93LmJpbmQodGhpcyk7XG4gICAgfVxuICAgIFN3YWxDb21wb25lbnQucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGUsXG4gICAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgICAgICAgIHRleHQ6IHRoaXMudGV4dCxcbiAgICAgICAgICAgIGh0bWw6IHRoaXMuaHRtbCxcbiAgICAgICAgfSwgdGhpcy5kZWZhdWx0U3dhbE9wdGlvbnMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHZhciBwcm9taXNlID0gc3dhbChvcHRpb25zKTtcbiAgICAgICAgcHJvbWlzZS50aGVuKGZ1bmN0aW9uIChzdWNjZXNzKSB7IHJldHVybiBfdGhpcy5jb25maXJtLmVtaXQoc3VjY2Vzcyk7IH0sIGZ1bmN0aW9uIChkaXNtaXNzKSB7IHJldHVybiBfdGhpcy5jYW5jZWwuZW1pdChkaXNtaXNzKTsgfSk7XG4gICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgIH07XG4gICAgcmV0dXJuIFN3YWxDb21wb25lbnQ7XG59KCkpO1xuZXhwb3J0IHsgU3dhbENvbXBvbmVudCB9O1xuU3dhbENvbXBvbmVudC5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogQ29tcG9uZW50LCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3dhbCcsXG4gICAgICAgICAgICAgICAgdGVtcGxhdGU6ICcnXG4gICAgICAgICAgICB9LF0gfSxcbl07XG4vKiogQG5vY29sbGFwc2UgKi9cblN3YWxDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgeyB0eXBlOiB1bmRlZmluZWQsIGRlY29yYXRvcnM6IFt7IHR5cGU6IEluamVjdCwgYXJnczogW1NXQUxfREVGQVVMVFMsXSB9LF0gfSxcbl07IH07XG5Td2FsQ29tcG9uZW50LnByb3BEZWNvcmF0b3JzID0ge1xuICAgICd0eXBlJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICd0aXRsZSc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAndGV4dCc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAnaHRtbCc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAnb3B0aW9ucyc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAnY29uZmlybSc6IFt7IHR5cGU6IE91dHB1dCB9LF0sXG4gICAgJ2NhbmNlbCc6IFt7IHR5cGU6IE91dHB1dCB9LF0sXG59O1xuIl19