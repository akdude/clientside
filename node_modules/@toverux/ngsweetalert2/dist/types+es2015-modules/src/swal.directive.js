import { Directive, EventEmitter, HostListener, Inject, Input, Output } from '@angular/core';
import swal from 'sweetalert2';
import { SWAL_DEFAULTS } from './di';
var SwalDirective = (function () {
    function SwalDirective(defaultSwalOptions) {
        this.defaultSwalOptions = defaultSwalOptions;
        this.confirm = new EventEmitter();
        this.cancel = new EventEmitter();
        this.modalOptions = {};
    }
    Object.defineProperty(SwalDirective.prototype, "swal", {
        set: function (options) {
            if (Array.isArray(options)) {
                this.modalOptions.title = options[0], this.modalOptions.text = options[1];
                if (options.length >= 3) {
                    this.modalOptions.type = options[2];
                }
            }
            else {
                this.modalOptions = options;
            }
        },
        enumerable: true,
        configurable: true
    });
    SwalDirective.prototype.onHostClicked = function (event) {
        var _this = this;
        event.preventDefault();
        event.stopImmediatePropagation();
        var options = Object.assign({}, this.defaultSwalOptions, this.modalOptions);
        swal(options).then(function (success) { return _this.confirm.emit(success); }, function (dismiss) { return _this.cancel.emit(dismiss); });
    };
    return SwalDirective;
}());
export { SwalDirective };
SwalDirective.decorators = [
    { type: Directive, args: [{ selector: '[swal]' },] },
];
/** @nocollapse */
SwalDirective.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Inject, args: [SWAL_DEFAULTS,] },] },
]; };
SwalDirective.propDecorators = {
    'swal': [{ type: Input },],
    'confirm': [{ type: Output },],
    'cancel': [{ type: Output },],
    'onHostClicked': [{ type: HostListener, args: ['click', ['$event'],] },],
};
