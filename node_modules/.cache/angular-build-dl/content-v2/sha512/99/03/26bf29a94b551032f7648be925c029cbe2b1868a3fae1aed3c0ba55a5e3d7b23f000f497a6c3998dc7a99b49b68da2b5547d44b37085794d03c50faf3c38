{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_services/Localstorage/storage.service.ts","webpack:///src/app/_services/accounts-service.service.ts","webpack:///src/app/_services/api-urls/apiUrls.service.ts","webpack:///src/app/_services/apirequest/apirequest.service.ts","webpack:///src/app/_services/apiservices/api.service.ts","webpack:///src/app/_services/config/xoomla.config.ts","webpack:///src/app/_services/settings.service.ts","webpack:///src/app/accounts/login/login.component.ts","webpack:///src/app/accounts/login/login.component.html","webpack:///src/app/advertisements/advertisement-create/advertisement-create.component.ts","webpack:///src/app/advertisements/advertisement-create/advertisement-create.component.html","webpack:///src/app/advertisements/advertisement-edit/advertisement-edit.component.ts","webpack:///src/app/advertisements/advertisement-edit/advertisement-edit.component.html","webpack:///src/app/advertisements/advertisements-list/advertisements-list.component.ts","webpack:///src/app/advertisements/advertisements-list/advertisements-list.component.html","webpack:///src/app/api-urls.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/badge-config/badgeconfig-add/badgeconfig-add.component.ts","webpack:///src/app/badge-config/badgeconfig-add/badgeconfig-add.component.html","webpack:///src/app/badge-config/badgeconfig-edit/badgeconfig-edit.component.ts","webpack:///src/app/badge-config/badgeconfig-edit/badgeconfig-edit.component.html","webpack:///src/app/badge-config/badgeconfig-list/badgeconfig-list.component.ts","webpack:///src/app/badge-config/badgeconfig-list/badgeconfig-list.component.html","webpack:///src/app/banner/banner-add/banner-add.component.ts","webpack:///src/app/banner/banner-add/banner-add.component.html","webpack:///src/app/banner/banner-edit/banner-edit.component.ts","webpack:///src/app/banner/banner-edit/banner-edit.component.html","webpack:///src/app/banner/banner-list/banner-list.component.ts","webpack:///src/app/banner/banner-list/banner-list.component.html","webpack:///src/app/category/add-category/add-category.component.ts","webpack:///src/app/category/add-category/add-category.component.html","webpack:///src/app/category/category-list/category-list.component.ts","webpack:///src/app/category/category-list/category-list.component.html","webpack:///src/app/category/edit-category/edit-category.component.ts","webpack:///src/app/category/edit-category/edit-category.component.html","webpack:///src/app/common/dialog/confirmdialog/confirmdialog.component.ts","webpack:///src/app/common/dialog/confirmdialog/confirmdialog.component.html","webpack:///src/app/components/drag-n-drop/drag-n-drop.component.ts","webpack:///src/app/components/drag-n-drop/drag-n-drop.component.html","webpack:///src/app/components/pagination/pagination.component.ts","webpack:///src/app/components/pagination/pagination.component.html","webpack:///src/app/constants.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/enums.ts","webpack:///src/app/error-404/error-404.component.ts","webpack:///src/app/error-404/error-404.component.html","webpack:///src/app/error-500/error-500.component.ts","webpack:///src/app/error-500/error-500.component.html","webpack:///src/app/locations/locations-add/locations-add.component.ts","webpack:///src/app/locations/locations-add/locations-add.component.html","webpack:///src/app/locations/locations-edit/locations-edit.component.ts","webpack:///src/app/locations/locations-edit/locations-edit.component.html","webpack:///src/app/locations/locations-list/locations-list.component.ts","webpack:///src/app/locations/locations-list/locations-list.component.html","webpack:///src/app/models/admin-user.ts","webpack:///src/app/models/advertisement.ts","webpack:///src/app/models/category.ts","webpack:///src/app/models/location.ts","webpack:///src/app/models/media-file.ts","webpack:///src/app/models/user-Acl.ts","webpack:///src/app/models/user-type.ts","webpack:///src/app/modules/material/material.module.ts","webpack:///src/app/top-navbar/top-navbar.component.ts","webpack:///src/app/top-navbar/top-navbar.component.html","webpack:///src/app/user-acl/add-user-acl/add-user-acl.component.ts","webpack:///src/app/user-acl/add-user-acl/add-user-acl.component.html","webpack:///src/app/user-acl/update-user-acl/update-user-acl.component.ts","webpack:///src/app/user-acl/update-user-acl/update-user-acl.component.html","webpack:///src/app/user-acl/user-acl.component.ts","webpack:///src/app/user-acl/user-acl.component.html","webpack:///src/app/user-type/add-user-type/add-user-type.component.ts","webpack:///src/app/user-type/add-user-type/add-user-type.component.html","webpack:///src/app/user-type/edit-user-type/edit-user-type.component.ts","webpack:///src/app/user-type/edit-user-type/edit-user-type.component.html","webpack:///src/app/user-type/user-type-list/user-type-list.component.ts","webpack:///src/app/user-type/user-type-list/user-type-list.component.html","webpack:///src/app/user/user-add/user-add.component.ts","webpack:///src/app/user/user-add/user-add.component.html","webpack:///src/app/user/user-edit/user-edit.component.ts","webpack:///src/app/user/user-edit/user-edit.component.html","webpack:///src/app/user/user-list/user-list.component.ts","webpack:///src/app/user/user-list/user-list.component.html","webpack:///src/app/utilities/utilities.services.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","StorageService","key","val","localStorage","getItem","value","JSON","stringify","setItem","removeItem","clear","AccountsService","http","json","post","apiUrl","pipe","res","providedIn","ApiurlsService","config","getSessionKeyUrl","userTypeList","userTypeCreate","userId","ApirequestService","api","url","data","type","postApiData","putApiData","ApiDataServices","_http","_lstore","toastr","_httpOptions","headers","_adminUser","parse","AdminUser","jsonData","authenticateAdmin","sessionKey","publicKey","accessKey","err","apiError","put","error","errorMessage","errors","Object","timeOut","xoomlaConfig","apiURL","SettingsService","fixedSidebar","LoginComponent","formBuilder","router","accountsService","submitted","isError","userData","loginForm","group","email","required","password","invalid","login","f","subscribe","window","location","href","controls","onSubmit","selector","templateUrl","styleUrls","AdvertisementCreateComponent","route","isSaving","loadingLocations","loadingCategories","categoryParams","categoryParamOptions","selectedParamOptions","loadingCatParams","adminUser","getLocations","getCategories","setForm","advertismentForm","idUser","get","idAdCategory","idLocation","adTitle","adDesc","price","locationList","locations","categoryList","categories","message","getRawValue","files","media","map","a","base64","length","item","paramName","options","join","advertisementCreate","success","navigate","getCategoryParams","i","paramType","Options","Radio","defaultValueArray","forEach","element","push","addControl","event","option","currentTarget","checked","text","splice","AdvertisementEditComponent","actRoute","loading","advertisement","mediaFiles","fetchedMediaFiles","deletedMediaFiles","addedMediaFiles","paramMap","params","idAdvertisement","getAdvertisement","advertisementGet","slice","onChangeCategory","findIndex","idAdGallery","image","fileName","advertisementUpdate","find","fileEvent","reader","FileReader","mediaFile","onload","target","result","toString","index","readAsDataURL","size","name","idAdCat","AdvertisementsListComponent","dialog","advertisements","isDeleting","selectedAdvertisment","paginationConfig","getAdvertisments","advertisementList","totalItems","advertisementId","deleteDialog","open","width","height","afterClosed","deleteAdverisement","advertisementDelete","document","querySelector","status","getAttribute","nature","activateAdvertisement","source","getElementById","classList","remove","advertisementActivate","response","add","setAttribute","advertisementBump","apiUrls","userAclList","userAclCreate","userAclDelete","idUserAcl","userAclUpdate","userAclDetail","userTypeGet","userTypeId","userTypeUpdate","userTypeDelete","userTypeSyncAcl","categoryCreate","categoryGet","categoryUpdate","categoryDelete","locationCreate","locationGet","locationId","locationUpdate","locationDelete","userList","userCreate","userGet","userUpdate","userDelete","idAvertisement","badgeList","badgeCreate","badgeGet","idBadgeConfig","badgeUpdate","badgeDelete","bannerList","bannerCreate","bannerGet","idBanner","bannerUpdate","bannerDelete","AppComponent","settingsService","smallSidebar","settingsOpen","sidebarColor","colors","sizes","onText","offText","onColor","offColor","bgBlack300","bgPrimary","bgLight","bgDanger","bgSuccess","bgWarning","isLoginPage","pathname","getFixedSidebar","innerWidth","events","evt","toggle","scrollTo","on","preventDefault","toggleClass","not","slideUp","parent","slideToggle","AppModule","provide","useClass","forRoot","declarations","imports","providers","bootstrap","routes","path","component","children","redirectTo","pathMatch","BadgeconfigAddComponent","_fb","_api","_ac","actionType","title","badgeData","createBadgeFormInit","getbadgeList","console","log","getBadge","badgeForm","valid","slug","description","visibility","parents","setbadgeData","patchValue","imageLink","file","dataTransfer","pattern","match","alert","_handleReaderLoaded","bind","template","BadgeconfigEditComponent","BadgeconfigListComponent","_utils","deleteBadge","deletebadgeFromList","filterArrayObj","BannerAddComponent","bannerData","createBannerFormInit","getBanner","bannerForm","bannerName","setbannerData","BannerEditComponent","BannerListComponent","getbannerList","deleteBanner","deletebannerFromList","banner","active","activeDialog","changeArrayObjProp","AddCategoryComponent","categoryData","parentList","createCategoryFormInit","getCategoryList","getCategory","categoryForm","array","categoryTitle","categoryIcon","categoryIconMobile","categoryColor","categoryHoverColor","setcategoryData","parameters","paramsFields","removeAt","ele","newParams","idAdParamSettings","paramDesc","pageBlock","defaultValue","desc","block","CategoryListComponent","selectedCategoryList","deleteCategory","deletecategoryFromList","EditCategoryComponent","ConfirmdialogComponent","DragNDropComponent","mediaFilesDivId","showProgress","uploadProgress","fileDropped","$event","prepareFilesList","setTimeout","progressInterval","setInterval","clearInterval","uploadFilesSimulator","setFile","bytes","decimals","k","dm","Math","floor","parseFloat","pow","toFixed","stopPropagation","fileOver","emit","d","onFileDropped","fileBrowseHandler","PaginationComponent","currentPage","pageChanged","MEDIA_FILES_DIV_ID","getMediaFiles","innerHTML","itemsPerPage","maxSize","previousLabel","nextLabel","DashboardComponent","LocalStorageKeys","MediaType","CategoryParamTypes","Error404Component","Error500Component","LocationsAddComponent","locationForm","locationName","LocationsEditComponent","getLocation","LocationsListComponent","selectedLocation","indexOf","Advertisement","CategoryList","Location","MediaFile","UserAcl","UserType","MaterialModule","TopNavbarComponent","stopPro","AddUserAclComponent","UserAclData","createUserACLFormInit","getUserAcl","userAclForm","namespace","resSucc","UsertypeList","setUserAclData","rule","UpdateUserAclComponent","UserACLComponent","selectedUserAcl","getUserACLList","meta","deleteuseracl","deleteuseraclFromList","useracl","AddUserTypeComponent","userTypeForm","userTypeName","userTypeNum","userTypeSlug","EditUserTypeComponent","loadingAcls","isSavingAcls","userType","idUserType","getUserType","getUserAcls","userAcls","selectedUserAcls","userTypeUserAcls","acl","isChecked","filter","acls","m","UserTypeListComponent","urls","selectedUserType","userTypes","getUserTypes","UserAddComponent","_router","isAdd","createUserFormInit","getusertypeList","getUser","userForm","userName","setuserData","usertypeList","UserEditComponent","UserListComponent","getuserList","deleteUser","deleteuserFromList","user","UtilityService","arr","prop","filteredVal","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class StorageService {\n    constructor() { }\n\n    getLocalItems(key) {\n        let val = localStorage.getItem(key);\n        return val;\n    }\n\n    setLocalItem(key, val) {\n        let value = (typeof val === 'object') ? JSON.stringify(val) : val;\n        localStorage.setItem(key, value);\n    }\n\n    removeItem(key) {\n        localStorage.removeItem(key);\n    }\n\n    clearStorage() {\n        localStorage.clear();\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageKeys } from '../enums';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n\n  constructor(private http: HttpClient) { }\n  login(json) {\n    return this.http.post(`${environment.apiUrl}/auth/admin/login`, json).pipe(res => res);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from 'src/environments/environment';\nimport { xoomlaConfig } from '../config/xoomla.config';\n\n@Injectable()\nexport class ApiurlsService {\n    constructor(public config: xoomlaConfig) { }\n\n\n    /* get Session key */\n    getSessionKeyUrl: string = `${environment.apiUrl}/get/sessionkey`;\n\n    \n    /* Usertype */\n    userTypeList: string = `${environment.apiUrl}/usertype/list`;\n    userTypeCreate: string = `${environment.apiUrl}/usertype/create`;\n    userTypeGet(userId: string) {return `${environment.apiUrl}/usertype/${userId}` }\n    userTypeUpdate(userId: string) {return `${environment.apiUrl}/usertype/update/${userId}` }\n    userTypeDelete(userId: string) {return `${environment.apiUrl}/usertype/delete/${userId}` }\n\n\n\n}","import { Injectable } from \"@angular/core\";\nimport { ApiDataServices } from '../apiservices/api.service';\n\n@Injectable()\nexport class ApirequestService {\n    constructor(private api: ApiDataServices) { }\n\n    fetchApiData(url, data, type = 'post') {\n        return (type == 'post') ? this.api.postApiData(url, data) : this.api.putApiData(url, data);\n    }\n\n\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { concatMap, retryWhen, timeout, catchError, mergeMap } from 'rxjs/operators';\nimport { StorageService } from '../Localstorage/storage.service';\nimport { AdminUser } from 'src/app/models/admin-user';\nimport { LocalStorageKeys } from 'src/app/enums';\nimport { apiUrls } from 'src/app/api-urls';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\n\n@Injectable()\nexport class ApiDataServices {\n    private _adminUser: AdminUser;\n    private _httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n        })\n    };\n    constructor(public _http: HttpClient,\n        public _lstore: StorageService,\n        private toastr: ToastrService) {\n            this._adminUser = new AdminUser();\n            this._adminUser = JSON.parse(localStorage.getItem(LocalStorageKeys.AdminUser));\n    }\n\n    postApiData(url: any, jsonData: any = {}, authenticateAdmin: boolean = true) {\n        if (authenticateAdmin) {\n            return this._http.post(apiUrls.getSessionKeyUrl, this._adminUser).pipe(\n                mergeMap((data: any) => {\n                    jsonData.sessionKey = data.data.sessionKey;\n                    jsonData.publicKey = this._adminUser.publicKey;\n                    jsonData.accessKey = this._adminUser.accessKey;\n                    return this._http.post(url, jsonData, this._httpOptions);\n                }),\n                (catchError(err => {\n                    this.apiError(err);\n                    return throwError(err);\n                }))\n            )\n        } else {\n            return this._http.post(url, jsonData, this._httpOptions).pipe(\n                (catchError(err => {\n                    this.apiError(err);\n                    return throwError(err);\n                }))\n            );\n        }\n    }\n\n    putApiData(url: any, jsonData: any = {}, authenticateAdmin: boolean = true) {\n        if (authenticateAdmin) {\n            return this._http.post(apiUrls.getSessionKeyUrl, this._adminUser).pipe(\n                mergeMap((data: any) => {\n                    jsonData.sessionKey = data.data.sessionKey;\n                    jsonData.publicKey = this._adminUser.publicKey;\n                    jsonData.accessKey = this._adminUser.accessKey;\n                    return this._http.put(url, jsonData, this._httpOptions);\n                }),\n                (catchError(err => {\n                    this.apiError(err);\n                    return throwError(err);\n                }))\n            );\n        } else {\n            return this._http.put(url, jsonData, this._httpOptions).pipe(\n                (catchError(err => {\n                    this.apiError(err);\n                    return throwError(err);\n                }))\n            );\n        }\n    }\n\n    apiError(error: any) {\n        let errorMessage = 'Sorry, Something went wrong!';\n        if(error && error.error && error.error.errors) {\n            errorMessage = '';\n            for(var key of Object.keys(error.error.errors)) {\n                if(key) {\n                    errorMessage += `${key}: ${error.error.errors[key][0]}`;\n                }\n            }\n        }\n        this.toastr.error(errorMessage, 'Error!', {timeOut: 25000}); // 30 seconds, user atleast get enough time to read about errors \n    }\n}","export class xoomlaConfig {\n    apiURL:string = 'https://xoomlapi.business-software.in/api/';\n }\n ","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SettingsService {\n\n    private fixedSidebar: boolean = true;\n\n\tconstructor() { }\n\n    setFixedSidebar(fixedSidebar) {\n        this.fixedSidebar = fixedSidebar;\n    }\n\n    getFixedSidebar() {\n        return this.fixedSidebar;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountsService } from 'src/app/_services/accounts-service.service';\nimport { LocalStorageKeys } from 'src/app/enums';\nimport { StorageService } from 'src/app/_services/Localstorage/storage.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  isError = false;\n  userData: any = [];\n\n  constructor(\n    private formBuilder: FormBuilder, \n    private router: Router, private accountsService: AccountsService,\n    public localStorage: StorageService\n    ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.isError = false;\n    this.accountsService.login({email: this.f.email.value, password: this.f.password.value}).pipe()\n    .subscribe(\n        (data: any) => {\n            this.submitted = false;\n            localStorage.setItem(LocalStorageKeys.AdminUser, JSON.stringify(data.data));\n            // should refresh the page while redirecting\n            window.location.href = '/dashboard';\n        },\n        error => {\n          this.submitted = false;\n          this.isError = true;\n        });\n  }\n\n}\n","<div class=\"row mt-50\">\n    <div class=\"col-md-4\">\n    </div>\n    <div class=\"col-md-4\">\n        <div class=\"panel\">\n            <div class=\"panel-heading\">\n                <div class=\"panel-title text-center mt-20\">\n                    <h5>Xoomla Login</h5>\n                </div>\n            </div>\n            <div class=\"panel-body\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div *ngIf=\"isError\" class=\"text-center\">\n                        <div class=\"alert alert-danger\">Email and/or password is incorrect.</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\" class=\"text text-danger\">Email is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">Password</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\" class=\"text text-danger\">Password is required</div>\n                        </div>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { apiUrls } from 'src/app/api-urls';\nimport { AdminUser } from 'src/app/models/admin-user';\nimport { getMediaFiles } from 'src/app/constants';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategoryParamTypes } from 'src/app/enums';\n\n\n@Component({\n  selector: 'app-advertisement-create',\n  templateUrl: './advertisement-create.component.html',\n  styleUrls: ['./advertisement-create.component.css']\n})\nexport class AdvertisementCreateComponent implements OnInit {\n\n  constructor(private api: ApiDataServices,  \n    private formBuilder: FormBuilder,\n    private route: Router,\n    private toastr: ToastrService) { }\n\n    advertismentForm: FormGroup;\n    submitted = false;\n    isError = false;\n    errorMessage = \"\";\n    isSaving = false;\n    loadingLocations = false;\n    loadingCategories = false;\n    locations: any[];\n    categories: any[];\n    categoryParams: any = [];\n    categoryParamOptions = [];\n    selectedParamOptions: any[] = [];\n    loadingCatParams = false;\n    adminUser = new AdminUser();\n    ngOnInit(): void {\n      this.getLocations();\n      this.getCategories();\n      this.setForm();\n    }\n  \n    setForm(){\n      this.advertismentForm = this.formBuilder.group({\n        idUser: [this.adminUser.get().idUser, Validators.required],\n        idAdCategory: ['', Validators.required],\n        idLocation: ['', Validators.required],\n        adTitle: ['', Validators.required],\n        adDesc: ['', Validators.required],\n        price: ['', Validators.required]\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() { return this.advertismentForm.controls; }\n  \n    getLocations(){\n      this.loadingLocations = true;\n      this.api.postApiData(apiUrls.locationList).pipe()\n      .subscribe(\n          (data: any) => {\n            this.loadingLocations = false;\n            this.locations = data.data;\n          },\n          (error: any) => {\n            this.errorMessage = 'Sorry, something went wrong.';\n            this.loadingLocations = false;\n            this.isError = true;\n          });\n    }\n\n    getCategories(){\n      this.loadingCategories = true;\n      this.api.postApiData(apiUrls.categoryList).pipe()\n      .subscribe(\n          (data: any) => {\n            this.loadingCategories = false;\n            this.categories = data.data;\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.loadingCategories = false;\n            this.isError = true;\n          });\n    }\n\n    onSubmit(){\n      this.submitted = true;\n      if (this.advertismentForm.invalid) {\n        return;\n      }\n      this.isError = false;\n      this.isSaving = true;\n      let data = this.advertismentForm.getRawValue();\n      let files = getMediaFiles();\n      data.media = files.map(a => a.base64);\n      if(this.selectedParamOptions.length > 0){\n        for(let item of this.selectedParamOptions) {\n          data[item.paramName] = item.options.join(',');\n        }\n      }\n      this.api.postApiData(apiUrls.advertisementCreate, data).pipe()\n      .subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('Advertisement created successfully', 'Done');\n            this.route.navigate(['/advertisements/list']);\n          },\n          (error: any) => {\n            this.errorMessage = 'Sorry, something went wrong.';\n            this.isSaving = false;\n            this.submitted = false;\n            this.isError = true;\n          });\n    }\n\n    onChangeCategory() {\n      if(this.f.idAdCategory.value){\n        this.loadingCatParams = true;\n        this.api.postApiData(apiUrls.getCategoryParams(this.f.idAdCategory.value), {}).pipe()\n      .subscribe(\n          (res: any) => {\n            this.loadingCatParams = false;\n            this.categoryParams = [];\n            this.categoryParams = res.data;\n            if(this.categoryParams.length > 0){\n              this.categoryParamOptions = [];\n              for (let i = 0; i < this.categoryParams.length; i++) {\n                if((this.categoryParams[i].paramType == CategoryParamTypes.Options || this.categoryParams[i].paramType == CategoryParamTypes.Radio) && this.categoryParams[i].defaultValueArray.length > 0){\n                  let options = [];\n                  this.categoryParams[i].defaultValueArray.forEach(element => {\n                    options.push({'text': element, 'isChecked': false})\n                  });\n                  this.categoryParamOptions.push({'paramName': this.categoryParams[i].paramName, \n                    options: options\n                  });\n                  this.categoryParams[i].defaultValueArray = options;\n                  this.selectedParamOptions.push({'paramName': this.categoryParams[i].paramName, options: []});\n                }\n                this.advertismentForm.addControl(this.categoryParams[i].paramName, new FormControl('', Validators.required))\n              }\n            } else {\n              this.setForm();\n              this.selectedParamOptions = [];\n            }\n          },\n          (error: any) => {\n            this.loadingCatParams = false;\n          });\n      }\n    }\n\n    changeParamOptionSelection(event, item, paramName) {\n      for(let option of this.selectedParamOptions){\n        if(option.paramName == paramName){\n          if(event.currentTarget.checked){\n            option.options.push(item.text);\n          } else {\n            option.options.splice(item.text, 1);\n          }\n        }\n      }\n    }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Advertisment Create</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li><a [routerLink]=\"'/advertisements/list'\">Advertisements</a></li>\n\t\t\t\t<li class=\"active\">Create</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Create Advertisement</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <form [formGroup]=\"advertismentForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"col-sm-6\">\n                                <h6 *ngIf=\"loadingCategories\">Loading categories...<i class=\"fa fa-spinner fa-spin\"></i></h6>\n                                <div *ngIf=\"!loadingCategories\" class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.idAdCategory.errors }\">\n                                    <label for=\"idAdCategory\" class=\"control-label\">Ad Category</label>\n                                    <div class=\"\">\n                                        <select formControlName=\"idAdCategory\" class=\"form-control\" (change)=\"onChangeCategory()\" [ngClass]=\"{ 'is-invalid': submitted && f.idAdCategory.errors }\">\n                                            <option value=\"\">-- Select Category --</option>\n                                            <option *ngFor=\"let category of categories\" value=\"{{category.idAdCategory}}\">{{category.categoryTitle}}</option>\n                                        </select>\n                                        <span *ngIf=\"submitted && f.idAdCategory.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <h6 *ngIf=\"loadingLocations\">Loading locations...<i class=\"fa fa-spinner fa-spin\"></i></h6>\n                                <div *ngIf=\"!loadingLocations\" class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.idLocation.errors }\">\n                                    <label for=\"idLocation\" class=\"control-label\">Ad Location</label>\n                                    <div class=\"\">\n                                        <select formControlName=\"idLocation\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.idLocation.errors }\">\n                                            <option value=\"\">-- Select Location --</option>\n                                            <option *ngFor=\"let location of locations\" value=\"{{location.idLocation}}\">{{location.locationName}}</option>\n                                        </select>\n                                        <span *ngIf=\"submitted && f.idLocation.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\"><h6 *ngIf=\"loadingCatParams\">Loading category params...<i class=\"fa fa-spinner fa-spin\"></i></h6></div>\n                            <div *ngIf=\"!loadingCatParams && categoryParams.length > 0\">\n                                <div *ngFor=\"let p of categoryParams; let i = index\">\n                                    <div>\n                                        <div class=\"col-sm-6\">\n                                            <label for=\"Param Name\" class=\"control-label\">{{p.paramName}}</label>\n                                            <div *ngIf=\"p.paramType=='text'\" class=\"\">\n                                                <input type=\"text\" class=\"form-control\"  formControlName=\"{{p.paramName}}\" placeholder=\"{{p.paramName}}\" class=\"form-control\" />\n                                            </div>\n                                            <div *ngIf=\"p.paramType=='options'\" class=\"\">\n                                                <div class=\"col-sm-12\" *ngFor=\"let item of p.defaultValueArray\">\n                                                    <input type=\"checkbox\" (change)=\"changeParamOptionSelection($event, item, p.paramName)\"> {{item.text}}\n                                                </div>\n                                            </div>\n                                            <div *ngIf=\"p.paramType=='radio'\" class=\"\">\n                                                <div class=\"col-sm-12\" *ngFor=\"let item of p.defaultValueArray\">\n                                                    <input type=\"radio\" (change)=\"changeParamOptionSelection($event, item, p.paramName)\"> {{item.text}}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.adTitle.errors }\">\n                                    <label for=\"adTitle\" class=\"control-label\">Ad Title</label>\n                                    <div class=\"\">\n                                        <input type=\"text\" formControlName=\"adTitle\" class=\"form-control\" placeholder=\"Ad Title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.adTitle.errors }\" />\n                                        <span *ngIf=\"submitted && f.adTitle.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.price.errors }\">\n                                    <label for=\"price\" class=\"control-label\">Price</label>\n                                    <div class=\"\">\n                                        <input type=\"number\" formControlName=\"price\" class=\"form-control\" placeholder=\"Price\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.price.errors }\" />\n                                        <span *ngIf=\"submitted && f.price.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.adDesc.errors }\">\n                                    <label for=\"adDesc\" class=\"control-label\">Description</label>\n                                    <div class=\"\">\n                                        <textarea class=\"form-control\" formControlName=\"adDesc\" placeholder=\"Description\" rows=\"5\" [ngClass]=\"{ 'is-invalid': submitted && f.adDesc.errors }\"></textarea>\n                                        <span *ngIf=\"submitted && f.adDesc.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\"><h4>Images:</h4></div>\n                            <div class=\"col-md-12 mb-50\"><dnd [showProgress]=\"false\"></dnd></div>\n                            <div class=\"text-right mt-50 mb-20\">\n                                <div class=\"text-right mt-50 mb-20\">\n                                    <a [routerLink]=\"'/advertisements/list'\" class=\"btn btn-default mr-20\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary mr-20\">{{isSaving ? 'Creating...' : 'Create' }} \n                                        <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { apiUrls } from 'src/app/api-urls';\nimport { AdminUser } from 'src/app/models/admin-user';\nimport { getMediaFiles } from 'src/app/constants';\nimport { ToastrService } from 'ngx-toastr';\nimport { Advertisement } from 'src/app/models/advertisement';\nimport { MediaFile } from 'src/app/models/media-file';\nimport { CategoryParamTypes } from 'src/app/enums';\n\n@Component({\n  selector: 'app-advertisement-edit',\n  templateUrl: './advertisement-edit.component.html',\n  styleUrls: ['./advertisement-edit.component.css']\n})\nexport class AdvertisementEditComponent implements OnInit {\n\n  constructor(private api: ApiDataServices,  \n    private formBuilder: FormBuilder,\n    private route: Router,\n    private actRoute: ActivatedRoute,\n    private toastr: ToastrService) { }\n\n    advertismentForm: FormGroup;\n    submitted = false;\n    isError = false;\n    errorMessage = \"\";\n    isSaving = false;\n    loadingLocations = false;\n    loadingCategories = false;\n    loadingCatParams = false;\n    loading = true;\n    locations: any[];\n    categories: any[];\n    adminUser = new AdminUser();\n    advertisement = new Advertisement();\n    mediaFiles: any[] = [];\n    fetchedMediaFiles: any[] = [];\n    deletedMediaFiles: MediaFile[] = [];\n    addedMediaFiles: MediaFile[] = [];\n    categoryParams: any = [];\n    categoryParamOptions = [];\n    selectedParamOptions: any[] = [];\n    ngOnInit(): void {\n      this.getLocations();\n      this.getCategories();\n      this.actRoute.paramMap.subscribe(params => {\n        this.advertisement.idAdvertisement = params.get('id');\n        this.getAdvertisement();\n      });\n    }\n  \n    \n    // convenience getter for easy access to form fields\n    get f() { return this.advertismentForm.controls; }\n\n    getAdvertisement(){\n      this.loading = true;\n    this.api.postApiData(apiUrls.advertisementGet(this.advertisement.idAdvertisement)).pipe()\n    .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.advertisement = data.data;\n          this.mediaFiles = data.data.media;\n          // as javascript only hold a reference to an object, not the object itself.\n          // so if we change this.mediaFiles then its changes also affects on this.fetchedMediaFiles.\n          // to prevent this, assign array with .slice(0).\n          this.fetchedMediaFiles = data.data.media.length > 0 ? data.data.media.slice(0) : data.data.media;\n          this.setForm();\n          this.onChangeCategory(this.advertisement.idAdCategory);\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n          this.errorMessage = 'Sorry, something went wrong';\n        });\n    }\n\n    setForm(){\n      this.advertismentForm = this.formBuilder.group({\n        idUser: [this.adminUser.get().idUser, Validators.required],\n        idAdCategory: [this.advertisement.idAdCategory, Validators.required],\n        idLocation: [this.advertisement.idLocation, Validators.required],\n        adTitle: [this.advertisement.adTitle, Validators.required],\n        adDesc: [this.advertisement.adDesc, Validators.required],\n        price: [this.advertisement.price, Validators.required],\n      });\n    }\n\n    getLocations(){\n      this.loadingLocations = true;\n      this.api.postApiData(apiUrls.locationList).pipe()\n      .subscribe(\n          (data: any) => {\n            this.loadingLocations = false;\n            this.locations = data.data;\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.loadingLocations = false;\n            this.isError = true;\n          });\n    }\n\n    getCategories(){\n      this.loadingCategories = true;\n      this.api.postApiData(apiUrls.categoryList).pipe()\n      .subscribe(\n          (data: any) => {\n            this.loadingCategories = false;\n            this.categories = data.data;\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.loadingCategories = false;\n            this.isError = true;\n          });\n    }\n\n    onSubmit(){\n      this.submitted = true;\n      // if (this.advertismentForm.invalid) {\n      //   return;\n      // }\n      this.isError = false;\n      this.isSaving = true;\n      let data = this.advertismentForm.getRawValue();\n      debugger\n      if(this.selectedParamOptions.length > 0){\n        for(let item of this.selectedParamOptions) {\n          data[item.paramName] = item.options.join(',');\n        }\n      }\n      data.media = this.fetchedMediaFiles;\n      for(let f = 0; f < this.fetchedMediaFiles.length; f++) {\n        let i = this.deletedMediaFiles.findIndex(a => a.idAdGallery == this.fetchedMediaFiles[f].idAdGallery); \n        if(i > -1) {\n          data.media[f].image = \"\";\n        } else {\n          data.media[f].image = this.fetchedMediaFiles[f].fileName;\n        }\n      }\n      this.addedMediaFiles = getMediaFiles();\n      if(this.addedMediaFiles.length > 0) {\n        data.media.push(...this.addedMediaFiles);\n      }\n      this.api.putApiData(apiUrls.advertisementUpdate(this.advertisement.idAdvertisement), data).pipe()\n      .subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('Advertisement updated successfully', 'Done');\n            this.route.navigate(['/advertisements/list']);\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.isSaving = false;\n            this.submitted = false;\n            this.isError = true;\n          });\n    }\n\n    deleteMedial(idAdGallery) {\n      let media = this.mediaFiles.find(a => a.idAdGallery == idAdGallery);\n      if(media) {\n        this.mediaFiles.splice(this.mediaFiles.findIndex(a => a.idAdGallery == idAdGallery), 1);\n        this.deletedMediaFiles.push(media);\n      }\n    }\n\n    editMedia(fileEvent, media){\n      var reader = new FileReader();\n      let mediaFile = new MediaFile();\n      //Get base64\n      reader.onload = (event) => {\n        mediaFile.base64 = event.target.result.toString();\n        mediaFile.image = mediaFile.base64;\n        let index = this.mediaFiles.findIndex(a => a.idAdCategory == media.idAdCategory);\n        if(index > -1){\n          this.mediaFiles[index].fileName = mediaFile.base64;\n        }\n      };\n      let base64 = reader.readAsDataURL(fileEvent.target.files[0]);\n      mediaFile.size = fileEvent.target.files[0].size;\n      mediaFile.name = fileEvent.target.files[0].name;\n    }\n\n    onChangeCategory(idAdCategory = null) {\n      if(this.f.idAdCategory.value || idAdCategory) {\n        let idAdCat = this.f.idAdCategory.value || idAdCategory;\n        this.loadingCatParams = true;\n        this.api.postApiData(apiUrls.getCategoryParams(idAdCat), {}).pipe()\n      .subscribe(\n          (res: any) => {\n            this.loadingCatParams = false;\n            this.categoryParams = res.data;\n            if(this.categoryParams.length > 0){\n              this.categoryParamOptions = [];\n              for (let i = 0; i < this.categoryParams.length; i++) {\n                if((this.categoryParams[i].paramType == CategoryParamTypes.Options || this.categoryParams[i].paramType == CategoryParamTypes.Radio) && this.categoryParams[i].defaultValueArray.length > 0){\n                  let options = [];\n                  this.categoryParams[i].defaultValueArray.forEach(element => {\n                    options.push({'text': element, 'isChecked': false})\n                  });\n                  this.categoryParamOptions.push({'paramName': this.categoryParams[i].paramName, \n                    options: options\n                  });\n                  this.categoryParams[i].defaultValueArray = options;\n                  this.selectedParamOptions.push({'paramName': this.categoryParams[i].paramName, options: []});\n                }\n                this.advertismentForm.addControl(this.categoryParams[i].paramName, new FormControl('', Validators.required))\n              }\n            } else {\n              this.setForm();\n              this.selectedParamOptions = [];\n            }\n          },\n          (error: any) => {\n            this.loadingCatParams = false;\n          });\n      }\n    }\n\n    changeParamOptionSelection(event, item, paramName) {\n      for(let option of this.selectedParamOptions){\n        if(option.paramName == paramName){\n          if(event.currentTarget.checked){\n            option.options.push(item.text);\n          } else {\n            option.options.splice(item.text, 1);\n          }\n        }\n      }\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Advertisment Edit</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li><a [routerLink]=\"'/advertisements/list'\">Advertisements</a></li>\n\t\t\t\t<li class=\"active\">Edit</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Edit Advertisement</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loading\" class=\"text-center\"><h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <form *ngIf=\"!loading\" [formGroup]=\"advertismentForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"col-sm-6\">\n                                <h6 *ngIf=\"loadingCategories\">Loading categories...<i class=\"fa fa-spinner fa-spin\"></i></h6>\n                                <div *ngIf=\"!loadingCategories\" class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.idAdCategory.errors }\">\n                                    <label for=\"idAdCategory\" class=\"control-label\">Ad Category</label>\n                                    <div class=\"\">\n                                        <select formControlName=\"idAdCategory\" class=\"form-control\" (change)=\"onChangeCategory()\" [ngClass]=\"{ 'is-invalid': submitted && f.idAdCategory.errors }\">\n                                            <option value=\"\">-- Select Category --</option>\n                                            <option *ngFor=\"let category of categories\" value=\"{{category.idAdCategory}}\">{{category.categoryTitle}}</option>\n                                        </select>\n                                        <span *ngIf=\"submitted && f.idAdCategory.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <h6 *ngIf=\"loadingLocations\">Loading locations...<i class=\"fa fa-spinner fa-spin\"></i></h6>\n                                <div *ngIf=\"!loadingLocations\" class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.idLocation.errors }\">\n                                    <label for=\"idLocation\" class=\"control-label\">Ad Location</label>\n                                    <div class=\"\">\n                                        <select formControlName=\"idLocation\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.idLocation.errors }\">\n                                            <option value=\"\">-- Select Location --</option>\n                                            <option *ngFor=\"let location of locations\" value=\"{{location.idLocation}}\">{{location.locationName}}</option>\n                                        </select>\n                                        <span *ngIf=\"submitted && f.idLocation.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\"><h6 *ngIf=\"loadingCatParams\">Loading category params...<i class=\"fa fa-spinner fa-spin\"></i></h6></div>\n                            <div *ngIf=\"!loadingCatParams && categoryParams.length > 0\">\n                                <div *ngFor=\"let p of categoryParams; let i = index\">\n                                    <div>\n                                        <div class=\"col-sm-6\">\n                                            <label for=\"Param Name\" class=\"control-label\">{{p.paramName}}</label>\n                                            <div *ngIf=\"p.paramType=='text'\" class=\"\">\n                                                <input type=\"text\" class=\"form-control\"  formControlName=\"{{p.paramName}}\" placeholder=\"{{p.paramName}}\" class=\"form-control\" />\n                                            </div>\n                                            <div *ngIf=\"p.paramType=='options'\" class=\"\">\n                                                <div class=\"col-sm-12\" *ngFor=\"let item of p.defaultValueArray\">\n                                                    <input type=\"checkbox\" (change)=\"changeParamOptionSelection($event, item, p.paramName)\"> {{item.text}}\n                                                </div>\n                                            </div>\n                                            <div *ngIf=\"p.paramType=='radio'\" class=\"\">\n                                                <div class=\"col-sm-12\" *ngFor=\"let item of p.defaultValueArray\">\n                                                    <input type=\"radio\" name=\"{{p.paramName}}\" (change)=\"changeParamOptionSelection($event, item, p.paramName)\"> {{item.text}}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.adTitle.errors }\">\n                                    <label for=\"adTitle\" class=\"control-label\">Ad Title</label>\n                                    <div class=\"\">\n                                        <input type=\"text\" formControlName=\"adTitle\" class=\"form-control\" placeholder=\"Ad Title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.adTitle.errors }\" />\n                                        <span *ngIf=\"submitted && f.adTitle.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.price.errors }\">\n                                    <label for=\"price\" class=\"control-label\">Price</label>\n                                    <div class=\"\">\n                                        <input type=\"number\" formControlName=\"price\" class=\"form-control\" placeholder=\"Price\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.price.errors }\" />\n                                        <span *ngIf=\"submitted && f.price.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.adDesc.errors }\">\n                                    <label for=\"adDesc\" class=\"control-label\">Description</label>\n                                    <div class=\"\">\n                                        <textarea class=\"form-control\" formControlName=\"adDesc\" placeholder=\"Description\" rows=\"5\" [ngClass]=\"{ 'is-invalid': submitted && f.adDesc.errors }\"></textarea>\n                                        <span *ngIf=\"submitted && f.adDesc.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mb-50\"><h4>Images:</h4></div>\n                            <div *ngIf=\"advertisement.media.length == 0\" class=\"text-center\"><h5>No images found!</h5></div>\n                            <div *ngIf=\"advertisement.media.length > 0\" class=\"row\">\n                                <div class=\"col-md-3 b-b-1eee\" *ngFor=\"let media of mediaFiles\">\n                                    <div class=\"text-center max-height-200\">\n                                        <img class=\"dnd-img\" src=\"{{media.fileName}}\">\n                                    </div>\n                                    <div class=\"mt-20 mb-20 text-center\">\n                                        <label class=\"file-upload-label\">\n                                            <input type=\"file\" (change)=\"editMedia($event, media)\"/>\n                                            <i class=\"fa fa-pencil\"></i>\n                                        </label>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only ml-15\" (click)=\"deleteMedial(media.idAdGallery)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mb-50\"><dnd [showProgress]=\"false\"></dnd></div>\n                            <div class=\"text-right mt-50 mb-20\">\n                                <div class=\"text-right mt-50 mb-20\">\n                                    <a [routerLink]=\"'/advertisements/list'\" class=\"btn btn-default mr-20\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary mr-20\">{{isSaving ? 'Saving...' : 'Save' }} \n                                        <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { Advertisement } from 'src/app/models/advertisement';\nimport { apiUrls } from 'src/app/api-urls';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-advertisements-list',\n  templateUrl: './advertisements-list.component.html',\n  styleUrls: ['./advertisements-list.component.css']\n})\nexport class AdvertisementsListComponent implements OnInit {\n  checked: boolean = false;\n  constructor(private api: ApiDataServices, private route: Router,\n    private actRoute: ActivatedRoute, private dialog: MatDialog, private toastr: ToastrService) { }\n  @ViewChild('deleteModalButton') deleteModalButton: ElementRef;\n  @ViewChild('cancelModalButton') cancelModalButton: ElementRef;\n  advertisements: Advertisement[] = [];\n  loading = true;\n  isDeleting = false;\n  isError = false;\n  errorMessage = \"Sorry, Something went wrong\";\n  selectedAdvertisment: Advertisement = new Advertisement();\n  paginationConfig: any = paginationConfig;\n  ngOnInit(): void {\n    this.advertisements = [];\n    this.getAdvertisments();\n  }\n  getLoadingView () {\n    this.loading = true;\n  }\n  \n  getAdvertisments() {\n    this.loading = true;\n    let json = {\n      \"idAdCategory\": \"\",\n      \"idLocation\": \"\",\n      \"idUser\": \"\",\n      \"searchKeyword\": \"\"\n    }\n    this.api.postApiData(apiUrls.advertisementList, json).pipe()\n      .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.advertisements = data.data;\n          this.paginationConfig.totalItems = this.advertisements.length;\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n        });\n  }\n\n  showDeleteModal(advertisementId) {\n    if (this.advertisements.find(a => a.idAdvertisement == advertisementId)) {\n      const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n        width: '400px',\n        height: '170px',\n        data: {\n          message: 'Are you sure, you want to delete?'\n        }\n      });\n      deleteDialog.afterClosed().subscribe(\n        data => {\n          if (data) this.deleteAdverisement(advertisementId);\n        }\n      );\n    }\n  }\n\n  deleteAdverisement(advertisementId) {\n    if (this.advertisements.find(a => a.idAdvertisement == advertisementId)) {\n      this.api.putApiData(apiUrls.advertisementDelete(advertisementId)).pipe()\n        .subscribe(\n          (data: any) => {\n            this.loading = false;\n            this.toastr.success('Advertisement deleted successfully', 'Deleted');\n            let index = this.advertisements.findIndex(a => a.idAdvertisement == advertisementId);\n            if (index >= -1) {\n              this.advertisements.splice(index, 1);\n            }\n          },\n          error => {\n            this.loading = false;\n            this.isError = true;\n          });\n    }\n  }\n\n  change(e,advertisementId) {\n    let element = document.querySelector(\".ad_status_\"+advertisementId);\n    let status = element.getAttribute('data-status');\n    if (status == '0') {\n      var nature = false;\n    } else {\n      var nature = true;\n    }\n      const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n        width: '400px',\n        height: '170px',\n        data: {\n          message: (nature == true) ? 'Are you sure, you want to activate the advertisement?' : 'Are you sure, you want to deactivate the advertisement?'\n        }\n      });\n      deleteDialog.afterClosed().subscribe(\n        data => {\n          if (data) {\n            this.activateAdvertisement(advertisementId, nature);\n          } else {\n            if (nature == true) {\n              e.source.checked = false;\n            } else {\n              e.source.checked = true;\n            }\n          }\n        }\n      );\n  }\n\n\n  activateAdvertisement(advertisementId, nature) {\n    document.getElementById('ad_'+advertisementId).classList.remove('hide');\n    let data = {\n      \"isActive\": nature\n    }\n    let element = document.querySelector(\".ad_status_\"+advertisementId);\n    let status = element.getAttribute('data-status');\n    this.api.putApiData(apiUrls.advertisementActivate(advertisementId), data).pipe()\n      .subscribe(\n        (data: any) => {\n          let response = nature == true ? 'Advertisement Activated successfully' : 'Advertisement Deactivated successfully';\n          this.toastr.success(response, 'Done');\n          document.getElementById('ad_'+advertisementId).classList.add('hide');\n          if (status == '0') {\n            element.setAttribute('data-status',\"1\");\n          } else {\n            element.setAttribute('data-status',\"0\");\n          }\n        },\n        (error: any) => {\n          document.getElementById('ad_'+advertisementId).classList.remove('hide');\n          this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n          this.isError = true;\n        });\n  }\n\n  bumpAd(idAdvertisement) {\n    this.api.putApiData(apiUrls.advertisementBump(idAdvertisement)).subscribe(\n      (data: any) => {\n        this.loading = false;\n        this.toastr.success('Advertisement bumped successfully');\n      },\n      error => {\n        this.loading = false;\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Advertisments</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/advertisements/create'\">Create</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li class=\"active\">Advertisments</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Advertisments</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"loading\" class=\"text-center\"><h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>Image</th>\n                                    <th>Title</th>\n                                    <th>Price</th>\n                                    <th>Action</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let advertisement of advertisements | paginate: paginationConfig let i = index\">\n                                    <td>{{i + 1}}</td>\n                                    <td scope=\"row\"><img src=\"{{advertisement.imageLink}}\" width=\"70\" height=\"70\"></td>\n                                    <td>{{advertisement.adTitle}}</td>\n                                    <td>{{advertisement.price}}</td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only mr-10\" [routerLink]=\"['/advertisements/edit',advertisement.idAdvertisement]\"><i class=\"fa fa-pencil\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only mr-10\" (click)=\"showDeleteModal(advertisement.idAdvertisement)\"><i class=\"fa fa-trash-o\"></i></button>\n                                        <button type=\"button\" class=\"btn btn-primary icon-only\" (click)=\"bumpAd(advertisement.idAdvertisement)\"><i class=\"fa fa-arrow-circle-up\"></i></button>\n                                    </td>\n                                    <td>\n                                        <mat-slide-toggle *ngIf=\"advertisement.isActive\" class=\"ad_status_{{advertisement.idAdvertisement}}\" data-status = \"0\" checked (change)=\"change($event,advertisement.idAdvertisement)\"></mat-slide-toggle>\n                                        <mat-slide-toggle *ngIf=\"!advertisement.isActive\" class=\"ad_status_{{advertisement.idAdvertisement}}\" data-status = \"1\" (change)=\"change($event,advertisement.idAdvertisement)\"></mat-slide-toggle>\n                                        <span class=\"hide\" id=\"ad_{{advertisement.idAdvertisement}}\">\n                                            <h4><i class=\"fa fa-spinner fa-spin ml-20\"></i></h4>\n                                        </span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && advertisements.length == 0\" class=\"text-center\"><h4>No data found!</h4></div>\n                        <div *ngIf=\"!loading && advertisements.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"advertisements.length\" [paginationConfig]=\"paginationConfig\"></app-pagination>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n        </div>\n    </div>\n</section>","import { environment } from 'src/environments/environment'\n\nexport const apiUrls = {\n    /* get Session key */\n    getSessionKeyUrl: `${environment.apiUrl}/get/sessionkey`,\n\n    //#region user ACL\n    userAclList: `${environment.apiUrl}/useracl/list`,\n    userAclCreate: `${environment.apiUrl}/useracl/create`,\n    userAclDelete(idUserAcl: string) { return `${environment.apiUrl}/useracl/delete/${idUserAcl}`},\n    userAclUpdate(idUserAcl: string) { return `${environment.apiUrl}/useracl/update/${idUserAcl}`},\n    userAclDetail(idUserAcl: string) { return `${environment.apiUrl}/useracl/${idUserAcl}`},\n    //#endregion\n\n    //#region User Type\n    userTypeList: `${environment.apiUrl}/usertype/list`,\n    userTypeCreate: `${environment.apiUrl}/usertype/create`,\n    userTypeGet: (userTypeId: string) => `${environment.apiUrl}/usertype/${userTypeId}`,\n    userTypeUpdate: (userTypeId: string) => `${environment.apiUrl}/usertype/update/${userTypeId}`,\n    userTypeDelete: (userTypeId: string) => `${environment.apiUrl}/usertype/delete/${userTypeId}`,\n    userTypeSyncAcl: (userTypeId: string) => `${environment.apiUrl}/usertype/sync/${userTypeId}/acl`,\n    //#endregion\n\n    //#region Category\n    categoryList:`${environment.apiUrl}/category/list`,\n    categoryCreate: `${environment.apiUrl}/category/create`,\n    categoryGet(idAdCategory: string) {return `${environment.apiUrl}/category/${idAdCategory}` },\n    categoryUpdate(idAdCategory: string) { return `${environment.apiUrl}/category/update/${idAdCategory}` },\n    categoryDelete(idAdCategory: string) { return `${environment.apiUrl}/category/delete/${idAdCategory}`},\n    //#endregion\n\n    //#region Location\n    locationList: `${environment.apiUrl}/location/list`,\n    locationCreate: `${environment.apiUrl}/location/create`,\n    locationGet: (locationId) => `${environment.apiUrl}/location/${locationId}`,\n    locationUpdate: (locationId) => `${environment.apiUrl}/location/update/${locationId}`,\n    locationDelete: (locationId) => `${environment.apiUrl}/location/delete/${locationId}`,\n    //#endregion\n\n\n    //#region User\n    userList: `${environment.apiUrl}/user/list`,\n    userCreate: `${environment.apiUrl}/user/create`,\n    userGet(idUser: string) {return `${environment.apiUrl}/user/${idUser}` },\n    userUpdate(idUser: string) { return `${environment.apiUrl}/user/update/${idUser}` },\n    userDelete(idUser: string) { return `${environment.apiUrl}/user/delete/${idUser}`},\n    //#endregion\n\n\n    //#region Advertisment\n    advertisementList: `${environment.apiUrl}/advertisement/list`,\n    advertisementCreate: `${environment.apiUrl}/advertisement/post`,\n    advertisementGet: (idAvertisement) => `${environment.apiUrl}/advertisement/${idAvertisement}`,\n    advertisementUpdate: (idAvertisement) => `${environment.apiUrl}/advertisement/update/${idAvertisement}`,\n    advertisementDelete: (idAvertisement) => `${environment.apiUrl}/advertisement/delete/${idAvertisement}`,\n    advertisementActivate: (idAvertisement) => `${environment.apiUrl}/advertisement/activate/${idAvertisement}`,\n    advertisementBump: (idAvertisement) => `${environment.apiUrl}/advertisement/bump/${idAvertisement}`,\n    //#endregion\n  \n    //#region Category\n    getCategoryParams: (id) => `${environment.apiUrl}/category/params/${id}`,\n\n    //#region BadgeConfig\n    badgeList: `${environment.apiUrl}/badge/list`,\n    badgeCreate: `${environment.apiUrl}/badge/create`,\n    badgeGet(idBadgeConfig: string) {return `${environment.apiUrl}/badge/${idBadgeConfig}` },\n    badgeUpdate(idBadgeConfig: string) { return `${environment.apiUrl}/badge/update/${idBadgeConfig}` },\n    badgeDelete(idBadgeConfig: string) { return `${environment.apiUrl}/badge/delete/${idBadgeConfig}`},\n    //#endregion\n\n     //#region BadgeConfig\n     bannerList: `${environment.apiUrl}/banner/list`,\n     bannerCreate: `${environment.apiUrl}/banner/create`,\n     bannerGet(idBanner: string) {return `${environment.apiUrl}/banner/${idBanner}` },\n     bannerUpdate(idBanner: string) { return `${environment.apiUrl}/banner/update/${idBanner}` },\n     bannerDelete(idBanner: string) { return `${environment.apiUrl}/banner/delete/${idBanner}`},\n     //#endregion\n\n}","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { SettingsService } from './_services/settings.service';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n\tfixedSidebar: boolean = false;\n\tsmallSidebar: boolean = false;\n\tsettingsOpen: boolean = false;\n\n\tsidebarColor: string = 'bg-black-300';\n\n\tcolors = [\"blue\", \"default\", \"gray\", \"green\", \"red\", \"sky-blue\", \"yellow\"];\n    sizes = [\"mini\", \"small\", \"normal\", \"large\"];\n\n    onText = \"On\";\n    offText = \"Off\";\n    onColor = \"green\";\n    offColor = \"red\";\n    size = \"normal\";\n\n\t// For Sidebar BG\n\tbgBlack300: boolean = true;\n\tbgPrimary: boolean = false;\n\tbgLight: boolean = false;\n\tbgDanger: boolean = false;\n\tbgSuccess: boolean = false;\n\tbgWarning: boolean = false;\n\n\tinnerWidth: any;\n\t\n\tisLoginPage: boolean = false;\n\n    constructor(\n\t\tprivate settingsService: SettingsService,\n\t\tprivate router: Router\n\t) { }\n\n\tngOnInit() {\n\t\tif(window.location.pathname == \"/accounts/login\"){\n\t\t\tthis.isLoginPage = true;\n\t\t} else {\n\t\t\tthis.fixedSidebar = this.settingsService.getFixedSidebar();\n\n\t\t\tthis.innerWidth = (window.innerWidth);\n\n\t\t\tthis.router.events.subscribe((evt) => {\n\t\t\t\tif (!(evt instanceof NavigationEnd)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// console.log(this.innerWidth);\n\t\t\t\tif (this.innerWidth < 991) {\n\t\t\t\t\t$('.left-sidebar').toggle();\n\t\t\t\t}\n\t\t\t\twindow.scrollTo(0, 0)\n\t\t\t});\n\n\t\t\t// Toggle user info on sidebar\n\t\t\t$('.user-info-handle').on('click', function(event){\n\t\t\t\tevent.preventDefault();\n\t\t\t\t$('.user-info').toggleClass('closed');\n\t\t\t});\n\n\t\t\t// Toggle small sidebar\n\t\t\t$('.small-nav-handle').on('click', function(event){\n\t\t\t\tevent.preventDefault();\n\t\t\t\t$('.left-sidebar').toggleClass('small-nav');\n\t\t\t\t$('.navbar-header').toggleClass('small-nav-header');\n\t\t\t});\n\n\t\t\t// Toggle Mobile Nav\n\t\t\t$('.mobile-nav-toggle').on('click', function(event){\n\t\t\t\tevent.preventDefault();\n\t\t\t\t$('.left-sidebar').toggle();\n\t\t\t})\n\n\t\t\t// Toggle sidebar dropdown\n\t\t\t$('.left-sidebar .has-children').not('.open').find('.child-nav').slideUp('100');\n\t\t\t$('.left-sidebar .has-children>a').on('click', function(event){\n\t\t\t\tevent.preventDefault();\n\t\t\t\t$(this).parent().toggleClass('open');\n\t\t\t\t$(this).parent().find('.child-nav').slideToggle('500');\n\t\t\t});\n\t\t}\n\t}\n}\n","<div class=\"main-wrapper\">\n    <app-top-navbar *ngIf=\"!isLoginPage\"></app-top-navbar>\n\n    <!-- ========== WRAPPER FOR BOTH SIDEBARS & MAIN CONTENT ========== -->\n    <div class=\"content-wrapper\">\n        <div class=\"content-container\">\n            <!-- ========== LEFT SIDEBAR ========== -->\n            <div *ngIf=\"!isLoginPage\" class=\"left-sidebar box-shadow\"\n                    [class.fixed-sidebar]=\"fixedSidebar\"\n                    [class.small-nav]=\"smallSidebar\"\n                    [class.bg-black-300]=\"bgBlack300\"\n                    [class.bg-primary]=\"bgPrimary\"\n                    [class.bg-danger]=\"bgDanger\"\n                    [class.bg-success]=\"bgSuccess\"\n                    [class.bg-warning]=\"bgWarning\"\n                    [class.bg-gray-500]=\"bgLight\"\n                    >\n                <div class=\"sidebar-content\">\n                    <div class=\"user-info closed\">\n                        <img src=\"../assets/images/user.png\" alt=\"John Doe\" class=\"img-circle profile-img\">\n                        <h6 class=\"title\">Demo User</h6>\n                        <small class=\"info\">Demo Summary</small>\n                    </div>\n                    <!-- /.user-info -->\n                    <div class=\"sidebar-nav\">\n                        <ul class=\"side-nav \" [class.color-gray]=\"!bgLight\">\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-dashboard\"></i> <span>Dashboard</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'user-acl/list'\"><i class=\"fa fa-users\"></i> <span>User ACL</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'user-types/list'\"><i class=\"fa fa-users\"></i> <span>User Types</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'category/list'\"><i class=\"fa fa-users\"></i> <span>Category</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'locations/list'\"><i class=\"fa fa-map\"></i> <span>Locations</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'user/list'\"><i class=\"fa fa-users\"></i> <span>Users</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'advertisements/list'\"><i class=\"fa fa-map\"></i> <span>Advertisments</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'badge-config/list'\"><i class=\"fa fa-id-badge\"></i> <span>BadgeConfig</span></a></li>\n                            <li routerLinkActive=\"active\"><a [routerLink]=\"'banner/list'\"><i class=\"fa fa-bookmark\"></i> <span>Banner</span></a></li>\n                        </ul>\n                        <!-- /.side-nav -->\n                    </div>\n                    <!-- /.sidebar-nav -->\n                </div>\n                <!-- /.sidebar-content -->\n            </div>\n            <!-- /.left-sidebar -->\n            <div class=\"main-page\">\n                <router-outlet></router-outlet>\n            </div>\n            <!-- /.main-page -->\n        </div>\n        <!-- /.content-container -->\n    </div>\n    <!-- /.content-wrapper -->\n</div>\n<!-- /.main-wrapper -->","import { RouterModule, Routes } from '@angular/router';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n// Components\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n// Import Plugins\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Error404Component } from './error-404/error-404.component';\nimport { Error500Component } from './error-500/error-500.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LaddaModule } from 'angular2-ladda';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgModule } from '@angular/core';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n// import { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { ReactiveFormsModule } from '@angular/forms';\n// Import Services\nimport { SettingsService } from './_services/settings.service';\n// import { SortablejsModule } from 'ngx-sortablejs'; \nimport { SweetAlert2Module } from '@toverux/ngsweetalert2';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TopNavbarComponent } from './top-navbar/top-navbar.component';\n// Import routes\nimport { routes } from './app.routes';\nimport { LoginComponent } from './accounts/login/login.component';\nimport { UserACLComponent } from './user-acl/user-acl.component';\nimport { xoomlaConfig } from './_services/config/xoomla.config';\nimport { ApiDataServices } from './_services/apiservices/api.service';\nimport { StorageService } from './_services/Localstorage/storage.service';\nimport { ApirequestService } from './_services/apirequest/apirequest.service';\nimport { AddUserAclComponent } from './user-acl/add-user-acl/add-user-acl.component';\nimport { UserTypeListComponent } from './user-type/user-type-list/user-type-list.component';\nimport { AddUserTypeComponent } from './user-type/add-user-type/add-user-type.component';\nimport { EditUserTypeComponent } from './user-type/edit-user-type/edit-user-type.component';\nimport { LocationsListComponent } from './locations/locations-list/locations-list.component';\nimport { LocationsAddComponent } from './locations/locations-add/locations-add.component';\nimport { LocationsEditComponent } from './locations/locations-edit/locations-edit.component';\nimport { UtilityService } from './utilities/utilities.services';\nimport { MaterialModule } from './modules/material/material.module';\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { ConfirmdialogComponent } from './common/dialog/confirmdialog/confirmdialog.component';\nimport { UpdateUserAclComponent } from './user-acl/update-user-acl/update-user-acl.component';\nimport { AdvertisementsListComponent } from './advertisements/advertisements-list/advertisements-list.component';\nimport { AdvertisementCreateComponent } from './advertisements/advertisement-create/advertisement-create.component';\nimport { CategoryListComponent } from './category/category-list/category-list.component';\nimport { AddCategoryComponent } from './category/add-category/add-category.component';\nimport { EditCategoryComponent } from './category/edit-category/edit-category.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\nimport { UserAddComponent } from './user/user-add/user-add.component';\nimport { DragNDropComponent } from './components/drag-n-drop/drag-n-drop.component';\nimport { AdvertisementEditComponent } from './advertisements/advertisement-edit/advertisement-edit.component';\nimport { BadgeconfigListComponent } from './badge-config/badgeconfig-list/badgeconfig-list.component';\nimport { BadgeconfigAddComponent } from './badge-config/badgeconfig-add/badgeconfig-add.component';\nimport { BadgeconfigEditComponent } from './badge-config/badgeconfig-edit/badgeconfig-edit.component';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ApiurlsService } from './_services/api-urls/apiUrls.service';\nimport { BannerAddComponent } from './banner/banner-add/banner-add.component';\nimport { BannerEditComponent } from './banner/banner-edit/banner-edit.component';\nimport { BannerListComponent } from './banner/banner-list/banner-list.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tDashboardComponent,\n\t\tTopNavbarComponent,\n\t\tError404Component,\n\t\tError500Component,\n\t\tLoginComponent,\n\t\tUserACLComponent,\n\t\tAddUserAclComponent,\n\t\tUserTypeListComponent,\n\t\tAddUserTypeComponent,\n\t\tEditUserTypeComponent,\n\t\tLocationsListComponent,\n\t\tLocationsAddComponent,\n\t\tLocationsEditComponent,\n\t\tConfirmdialogComponent,\n\t\tUpdateUserAclComponent,\n\t\tAdvertisementsListComponent,\n\t\tAdvertisementCreateComponent,\n\t\tCategoryListComponent,\n\t\tAddCategoryComponent,\n\t\tEditCategoryComponent,\n\t\tUserListComponent,\n\t\tUserEditComponent,\n\t\tUserAddComponent,\n\t\tDragNDropComponent,\n\t\tAdvertisementEditComponent,\n\t\tBadgeconfigListComponent,\n\t\tBadgeconfigAddComponent,\n\t\tBadgeconfigEditComponent,\n\t\tPaginationComponent,\n\t\tBannerAddComponent,\n\t\tBannerEditComponent,\n\t\tBannerListComponent\n\t\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tNgxPaginationModule,\n\t\tBrowserAnimationsModule,\n\t\tToastrModule.forRoot(), // ToastrModule added\n\t\tFormsModule,\n\t\tHttpClientModule,\n        RouterModule.forRoot(routes),\n        BsDropdownModule.forRoot(),\n        CollapseModule.forRoot(),\n        AccordionModule.forRoot(),\n\t\tButtonsModule.forRoot(),\n\t\tModalModule.forRoot(),\n\t\tCarouselModule.forRoot(),\n\t\tPopoverModule.forRoot(),\n\t\tTabsModule.forRoot(),\n\t\tTooltipModule.forRoot(),\n\t\tNgMultiSelectDropDownModule.forRoot(),\n\t\tReactiveFormsModule,\n\t\tLaddaModule,\n\t\tCustomFormsModule,\n\t\tMaterialModule,\n\t\tColorPickerModule\n\t],\n\tproviders: [\n\t\t{provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher },\n\t\tSettingsService,\n\t\txoomlaConfig,\n\t\tApiDataServices,\n\t\tStorageService,\n\t\tApiurlsService,\n\t\tApirequestService,\n\t\tUtilityService\n    ],\n\tbootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\n\n// Components\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Error404Component } from './error-404/error-404.component';\nimport { Error500Component } from './error-500/error-500.component';\nimport { LoginComponent } from './accounts/login/login.component';\nimport { UserACLComponent } from './user-acl/user-acl.component';\nimport { UserTypeListComponent } from './user-type/user-type-list/user-type-list.component';\nimport { AddUserTypeComponent } from './user-type/add-user-type/add-user-type.component';\nimport { EditUserTypeComponent } from './user-type/edit-user-type/edit-user-type.component';\nimport { LocationsListComponent } from './locations/locations-list/locations-list.component';\nimport { LocationsAddComponent } from './locations/locations-add/locations-add.component';\nimport { LocationsEditComponent } from './locations/locations-edit/locations-edit.component';\nimport { UpdateUserAclComponent } from './user-acl/update-user-acl/update-user-acl.component';\nimport { AddUserAclComponent } from './user-acl/add-user-acl/add-user-acl.component';\nimport { AdvertisementsListComponent } from './advertisements/advertisements-list/advertisements-list.component';\nimport { AdvertisementCreateComponent } from './advertisements/advertisement-create/advertisement-create.component';\nimport { CategoryListComponent } from './category/category-list/category-list.component';\nimport { AddCategoryComponent } from './category/add-category/add-category.component';\nimport { EditCategoryComponent } from './category/edit-category/edit-category.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserAddComponent } from './user/user-add/user-add.component';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\nimport { AdvertisementEditComponent } from './advertisements/advertisement-edit/advertisement-edit.component';\nimport { BadgeconfigListComponent } from './badge-config/badgeconfig-list/badgeconfig-list.component';\nimport { BadgeconfigAddComponent } from './badge-config/badgeconfig-add/badgeconfig-add.component';\nimport { BadgeconfigEditComponent } from './badge-config/badgeconfig-edit/badgeconfig-edit.component';\nimport { BannerListComponent } from './banner/banner-list/banner-list.component';\nimport { BannerAddComponent } from './banner/banner-add/banner-add.component';\nimport { BannerEditComponent } from './banner/banner-edit/banner-edit.component';\n\n\n// Routes\nexport const routes: Routes = [\n    { path: 'accounts/login', component: LoginComponent },\n    { path: 'dashboard', component: DashboardComponent },\n    {\n        path: 'user-types',\n        children: [\n            { path: 'list', component: UserTypeListComponent },\n            { path: 'add', component: AddUserTypeComponent },\n            { path: 'edit/:id', component: EditUserTypeComponent },\n        ]\n    },\n    {\n        path: 'user-acl',\n        children: [\n            { path: 'list', component: UserACLComponent },\n            { path: 'add', component: AddUserAclComponent },\n            { path: 'update/:id', component: UpdateUserAclComponent }\n        ]\n    },\n    {\n      path: 'category',\n      children:[\n        { path: 'list', component: CategoryListComponent},\n        { path: 'add', component: AddCategoryComponent},\n        { path: 'update/:id', component: EditCategoryComponent}\n      ]\n    },\n    { path: 'locations', \n        children: [\n            { path: 'list', component: LocationsListComponent },\n            { path: 'add', component: LocationsAddComponent },\n            { path: 'edit/:id', component: LocationsEditComponent },\n        ] \n    },\n    { path: 'user', \n        children: [\n            { path: 'list', component: UserListComponent },\n            { path: 'add', component: UserAddComponent },\n            { path: 'edit/:id', component: UserEditComponent },\n        ] \n    },\n    { path: 'advertisements', \n        children: [\n            { path: 'list', component: AdvertisementsListComponent },\n            { path: 'create', component: AdvertisementCreateComponent },\n            { path: 'edit/:id', component: AdvertisementEditComponent },\n        ] \n    },\n    { path: 'badge-config', \n        children: [\n            { path: 'list', component: BadgeconfigListComponent },\n            { path: 'add', component: BadgeconfigAddComponent },\n            { path: 'edit/:id', component: BadgeconfigEditComponent },\n        ] \n    },\n    { path: 'banner', \n        children: [\n            { path: 'list', component: BannerListComponent },\n            { path: 'add', component: BannerAddComponent },\n            { path: 'edit/:id', component: BannerEditComponent },\n        ] \n    },\n    { path: 'error-404', component: Error404Component },\n    { path: 'error-500', component: Error500Component },\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n    { path: '**', redirectTo: '/dashboard' }\n];\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-badgeconfig-add',\n  templateUrl: './badgeconfig-add.component.html',\n  styleUrls: ['./badgeconfig-add.component.css'], template: '<div>'\n    + '<input type=\"file\" (change)=\"upload($event)\">'\n    + '</div>',\n\n})\nexport class BadgeconfigAddComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    private _fb: FormBuilder,\n    private router: Router,\n    private _api: ApiDataServices,\n    private _ac: ActivatedRoute\n  ) { }\n\n\n  @Input() actionType: string = 'Add';\n  @Input() title: string = 'Create New BadgeConfig';\n  badgeForm: FormGroup;\n  submitted = false;\n  loading = false;\n  errorMessage = \"\";\n  isSaving = false;\n  idBadgeConfig: any = '';\n  badgeData: any = '';\n  badgeList: any[];\n  image: string = '';\n\n  ngOnInit(): void {\n    this.createBadgeFormInit();\n    this.getbadgeList();\n    this._ac.params.subscribe(\n      params => {\n        this.idBadgeConfig = params.id;\n        if (this.idBadgeConfig) {\n          console.log(this.idBadgeConfig);\n          this.getBadge();\n        }\n      }\n    )\n  }\n\n  //Initializing Badgeform for validation\n  createBadgeFormInit() {\n    this.badgeForm = this._fb.group({\n      'title': ['', [Validators.required]],\n      'slug': ['', [Validators.required]],\n      'type': ['', [Validators.required]],\n      'description': ['', [Validators.required]],\n      'parents': [0],\n      'price': ['', [Validators.required]],\n      'image': ['', this.actionType == 'Add' ? [Validators.required] : []],\n      'visibility': ['', [Validators.required]]\n    });\n\n  }\n\n  get f() { return this.badgeForm.controls; }\n\n  //Calling Submit function\n  onSubmit() {\n    console.log(this.badgeForm.value);\n    this.submitted = true;\n\n    //Checking form validaton\n    if (this.badgeForm.valid) {\n      this.isSaving = true;\n\n      //Creating BadgeConfig\n      if (this.actionType == 'Add') {\n\n        let data: any = {\n          title: this.f.title.value,\n          slug: this.f.slug.value,\n          type: this.f.type.value,\n          description: this.f.description.value,\n          price: this.f.price.value,\n          image: this.f.image.value,\n          visibility: this.f.visibility.value\n        }\n\n        if (this.f.parents.value) {\n          data.parents = (this.f.parents.value).join();\n        }\n\n        this._api.postApiData(apiUrls.badgeCreate, data).subscribe(\n          (data: any) => {\n            console.log(data);\n            this.isSaving = false;\n            this.submitted = false;            \n            this.toastr.success('BadgeConfig  created successfully');              \n            this.router.navigate(['badge-config/list']);\n              \n            }, (error: any) => {\n              this.errorMessage = error && error.message ? error.message : 'Sorry, Something went wrong';\n              this.isSaving = false;\n              this.submitted = false;\n            }\n          \n        );\n      }\n\n      //Editing BadgeConfig details\n      if (this.actionType == 'Edit') {\n        let data: any = {\n          title: this.f.title.value,\n          slug: this.f.slug.value,\n          type: this.f.type.value,\n          description: this.f.description.value,\n          price: this.f.price.value,\n          visibility: this.f.visibility.value\n        }\n        this.f.parents.value ? (data.parents = (this.f.parents.value).join()) : '';\n        this.f.image.value ? (data.image = this.f.image.value) : '';console.log(data)\n\n        this._api.putApiData(apiUrls.badgeUpdate(this.idBadgeConfig), data).subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;           \n            this.toastr.success('BadgeConfig  updated successfully');              \n            this.router.navigate(['badge-config/list'])\n              \n            },\n            (error: any) => {\n              this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n              this.isSaving = false;\n              this.submitted = false;\n            \n          });\n\n      }\n\n    } else {\n      console.log('error')\n      return;\n    }\n  }\n\n  //Getting BadgeConfig data using (idBadgeConfig)\n  getBadge() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.badgeGet(this.idBadgeConfig)).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.badgeData = data.data;\n        if (this.badgeData) {\n          this.loading = false;\n          this.setbadgeData(this.badgeData);\n        }\n      }\n    )\n  }\n\n  //Setting BadgeConfig data in edit form\n  setbadgeData(data) {\n    this.badgeForm.patchValue({\n      'title': data.title,\n      'slug': data.slug,\n      'type': data.type,\n      'description': data.description,\n      'price': data.price,\n      'parents': data.parents,\n      'visibility': data.visibility\n    });\n    this.image = data.imageLink;\n  }\n  \n  //Gettting BadgeConfig list\n  getbadgeList() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.badgeList).subscribe(\n      (data: any) => {\n        this.loading = false;\n        this.badgeList = data.data;\n      },\n      error => {\n        this.loading = false;\n      }\n    )\n  }\n  \n  //Cancel BadgeConfig\n  cancelbadgeConfigcreate() {\n    this.router.navigate(['badge-config/list']);\n  }\n  \n  //Function for uploading image\n  handleInputChange(e) {\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    console.log(file);\n\n    var pattern = /image-*/;\n    var reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n  _handleReaderLoaded(e) {\n    let reader = e.target;\n    this.image = reader.result;\n    console.log(this.image);\n\n    this.badgeForm.patchValue({ image: this.image })\n    console.log(this.image)\n  }\n\n  cancel() {\n    this.image = \"null\"\n  }\n}\n\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">BadgeConfig</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n                <li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li><a [routerLink]=\"'/badge-config/list'\">BadgeConfig</a></li>\n                <li class=\"active\">{{actionType}}</li>\n            </ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container-fluid -->\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>{{title}}</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                        <form *ngIf=\"!loading\" [formGroup]=\"badgeForm\" (ngSubmit)=\"onSubmit()\">\n                           \n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.title.errors }\">\n                                <label for=\"title\" class=\"control-label\">Title</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"title\" class=\"form-control\" placeholder=\"title\"\n                                        class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\n                                    <span *ngIf=\"submitted && f.title.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.slug.errors }\">\n                                <label for=\"slug\" class=\"control-label\">Slug</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"slug\" class=\"form-control\" placeholder=\"slug\"\n                                        class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.slug.errors }\" />\n                                    <span *ngIf=\"submitted && f.slug.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.type.errors }\">\n                                <label for=\"type\" class=\"control-label\">Type</label>\n                                <div class=\"\">\n                                    <select formControlName=\"type\" class=\"form-control\">\n                                        <option>highlight</option>\n                                        <option>feature</option>\n                                        <option>badging</option>\n                                        <option>promote</option>\n                                    </select>\n\n                                    <span *ngIf=\"submitted && f.type.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.description.errors }\">\n                                <label for=\"description\" class=\"control-label\">Description</label>\n                                <div class=\"\">\n                                    <input type=\"description\" formControlName=\"description\" class=\"form-control\"\n                                        placeholder=\"description\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\n                                    <span *ngIf=\"submitted && f.description.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.price.errors }\">\n                                <label for=\"price\" class=\"control-label\">Price</label>\n                                <div class=\"\">\n                                    <input type=\"price\" formControlName=\"price\" class=\"form-control\" placeholder=\"price\"\n                                        class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.price.errors }\" />\n                                    <span *ngIf=\"submitted && f.price.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.parents.errors }\">\n                                <label for=\"parents\" class=\"control-label\">Parents</label>\n                                <select formControlName=\"parents\" class=\"form-control\" multiple>\n                                    <option *ngFor=\"let badge of badgeList\" value=\"{{badge.idBadgeConfig}}\">\n                                        {{badge.title}}</option>\n                                </select>\n                                <span id=\"helpBlock\" class=\"help-block\">Use ctrl / command key on keyboard to select multiple options.</span>\n                                <span *ngIf=\"submitted && f.parents.errors\" class=\"help-block\">This field is\n                                    required.</span>\n                            </div>\n\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.image.errors }\">\n                                <label for=\"image\" class=\"control-label\">image</label>\n                                <div class=\"image-upload\">\n                                    <img [src]=\"image\" style=\"max-width:300px;max-height:300px\"/>\n                                    <input type=\"file\"\n                                        (change)=\"handleInputChange($event)\"/>\n                                        <input formControlName=\"image\"  type=\"hidden\"/>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.type.errors }\">\n                                <label for=\"visibility\" class=\"control-label\">Visibility</label>\n                                <div class=\"\">\n                                    <select formControlName=\"visibility\" class=\"form-control\">\n                                        <option>home</option>\n                                        <option>category</option>\n                                        <option>list</option>\n                                    </select>\n\n                                    <span *ngIf=\"submitted && f.type.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n                            <button type=\"submit\"\n                                class=\"btn btn-primary\">{{actionType == 'Add'? (isSaving ? 'Creating...' : 'Create') : (isSaving ? 'Updating...' : 'Update') }}\n                                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-badgeconfig-edit',\n  templateUrl: './badgeconfig-edit.component.html',\n  styleUrls: ['./badgeconfig-edit.component.css']\n})\nexport class BadgeconfigEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-badgeconfig-add [actionType]=\"'Edit'\" [title]=\"'Edit BadgeConfig'\"></app-badgeconfig-add>","import { Component, OnInit } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilityService } from 'src/app/utilities/utilities.services';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-badgeconfig-list',\n  templateUrl: './badgeconfig-list.component.html',\n  styleUrls: ['./badgeconfig-list.component.css']\n})\nexport class BadgeconfigListComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    private _api: ApiDataServices,\n    private dialog: MatDialog,\n    private _utils: UtilityService\n  ) { }\n\n  badgeList:any=[];\n  loading = true;\n  isDeleting = false;\n  paginationConfig: any = paginationConfig;\n\n  ngOnInit(): void {\n    this.getbadgeList();\n  }\n  \n  //Getting BadgeConfiglist\n  getbadgeList(){\n    this.loading = true;\n    this._api.postApiData(apiUrls.badgeList).subscribe(\n      (data:any)=>{\n        this.loading=false;\n        this.badgeList = data.data;\n        this.paginationConfig.totalItems = this.badgeList.length;\n      },\n      error=>{\n        this.loading=false;\n      }\n    );\n\n  }\n  \n  //Deleting BadgeConfig using (idBadgeConfig)\n  confirmDelete(res){\n    const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure to delete?'\n      }\n    });\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) this.deleteBadge(res);\n      }\n    );\n  }  \n\n  deleteBadge(res) {\n    this._api.putApiData(apiUrls.badgeDelete(res.idBadgeConfig))\n      .subscribe(\n        (data: any) => {\n          this.isDeleting = false;\n          this.toastr.success('BadgeConfig  deleted successfully', \"Deleted\");\n          this.deletebadgeFromList(res);\n          },\n          error => {\n\n          },\n          () => { }\n      );\n  }\n  deletebadgeFromList(res) {\n    this.badgeList = this._utils.filterArrayObj(this.badgeList, 'idBadgeConfig', res.idBadgeConfig);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">BadgeConfig</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/badge-config/add'\">Add</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li class=\"active\">BadgeConfig</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>BadgeList</h5>\n                        </div>\n                        <div *ngIf=\"!loading && badgeList.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"badgeList.length\" [paginationConfig]=\"paginationConfig\">\n                            </app-pagination>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"isDeleting\" class=\"text-center\">\n                            <h4>Deleting...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                       \n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>Title</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                    <th>Price</th>\n                                    <th>Image</th>\n                                    <th>Visibility</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let badge of badgeList | paginate: paginationConfig let i = index\">\n                                    <td>{{(((paginationConfig.currentPage - 1 )*(paginationConfig.itemsPerPage))) + (i + 1)}}</td>\n                                    <td>{{badge.title}}</td>\n                                    <td>{{badge.type}}</td>\n                                    <td>{{badge.description }}</td>\n                                    <td>{{badge.price }}</td>\n                                    <td><img src= {{badge.imageLink}} class= \"image\" alt=\"Italian Trulli\"></td>\n                                    <td>{{badge.visibility}}</td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only margin\"\n                                            [routerLink]=\"['/badge-config/edit',badge.idBadgeConfig]\"><i\n                                                class=\"fa fa-pencil\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only\"\n                                            (click)=\"confirmDelete(badge)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && badgeList.length == 0\" class=\"text-center\"><h4>No data found!</h4></div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n        </div>\n    </div>\n  </section>","import { Component, OnInit, Input } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-banner-add',\n  templateUrl: './banner-add.component.html',\n  styleUrls: ['./banner-add.component.css']\n})\nexport class BannerAddComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    private _fb: FormBuilder,\n    private router: Router,\n    private _api: ApiDataServices,\n    private _ac: ActivatedRoute\n  ) { }\n\n  @Input() actionType: string = 'Add';\n  @Input() title: string = 'Create New Banner';\n  bannerForm: FormGroup;\n  submitted = false;\n  loading = false;\n  errorMessage = \"\";\n  isSaving = false;\n  idBanner: any = '';\n  bannerData: any = '';\n  bannerList: any[];\n\n  ngOnInit(): void {\n    this.createBannerFormInit();\n    this._ac.params.subscribe(\n      params => {\n        this.idBanner = params.id;\n        if (this.idBanner) {\n          this.getBanner();\n        }\n      }\n    )\n  }\n  //Initializing Bannerform for validation\n  createBannerFormInit() {\n    this.bannerForm = this._fb.group({\n      'bannerName': ['', [Validators.required]],\n      'text': ['', [Validators.required]],\n      'location': ['', [Validators.required]]\n    });\n  }\n\n  get f() { return this.bannerForm.controls; }\n\n  //Calling Submit function\n  onSubmit() {\n    this.submitted = true;\n\n    //Checking form validaton\n      if (this.bannerForm.valid) {\n      this.isSaving = true;\n\n    //Creating Banner\n      if (this.actionType == 'Add') {\n        let data: any = {\n          bannerName: this.f.bannerName.value,\n          text: this.f.text.value,\n          location: this.f.location.value\n        }\n        this._api.postApiData(apiUrls.bannerCreate, data).subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('Banner created successfully');\n            this.router.navigate(['banner/list']);\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, Something went wrong';\n            this.isSaving = false;\n            this.submitted = false;\n          }\n        );\n      }\n\n      //Editing Banner details\n      if (this.actionType == 'Edit') {\n        let data: any = {\n          bannerName: this.f.bannerName.value,\n          text: this.f.text.value,\n          location: this.f.location.value\n        }\n        this._api.putApiData(apiUrls.bannerUpdate(this.idBanner),data).subscribe(\n         (data:any) => {\n          this.isSaving = false;\n          this.submitted = false;           \n          this.toastr.success('Banner  updated successfully');              \n          this.router.navigate(['banner/list'])\n         },\n         (error: any) => {\n          this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n          this.isSaving = false;\n          this.submitted = false;\n        \n      });\n    }\n\n    }else {\n      console.log('error')\n      return;\n    }\n\n  }\n\n  //Getting Banner data using (idBanner)\n  getBanner(){\n    this.loading=true;\n    this._api.postApiData(apiUrls.bannerGet(this.idBanner)).subscribe(\n      (data:any) => {\n        this.bannerData = data.data;\n        if(this.bannerData){\n          this.loading = false;\n          this.setbannerData(this.bannerData);\n        }\n      }\n    )\n  }\n\n  //Setting Banner data in edit form\n  setbannerData(data){\n    this.bannerForm.patchValue({\n      'bannerName': data.bannerName,\n      'text' : data.text,\n      'location' : data.location\n    });\n  }\n\n\n  //Cancel Banner create\n  cancelbannercreate() {\n    this.router.navigate(['banner/list']);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Banner</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n                <li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li><a [routerLink]=\"'/banner/list'\">Banner</a></li>\n                <li class=\"active\">{{actionType}}</li>\n            </ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n\n<!-- /.container-fluid -->\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>{{title}}</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                        <form *ngIf=\"!loading\" [formGroup]=\"bannerForm\" (ngSubmit)=\"onSubmit()\">\n                           \n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.bannerName.errors }\">\n                                <label for=\"bannerName\" class=\"control-label\">Banner Name</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"bannerName\" class=\"form-control\" placeholder=\"BannerName\"\n                                        class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.bannerName.errors }\" />\n                                    <span *ngIf=\"submitted && f.bannerName.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.text.errors }\">\n                                <label for=\"text\" class=\"control-label\">Text</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"text\" class=\"form-control\" placeholder=\"Text\"\n                                        class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.text.errors }\" />\n                                    <span *ngIf=\"submitted && f.text.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.location.errors }\">\n                                <label for=\"location\" class=\"control-label\">Location</label>\n                                <div class=\"\">\n                                    <select formControlName=\"location\" class=\"form-control\">\n                                        <option>top</option>\n                                        <option>header</option>\n                                        <option>middle1</option>\n                                        <option>middle2</option>\n                                        <option>middle3</option>\n                                        <option>left1</option>\n                                        <option>left2</option>\n                                        <option>left3</option>\n                                        <option>right1</option>\n                                        <option>right2</option>\n                                        <option>right3</option>\n                                        <option>footer</option>\n                                    </select>\n\n                                    <span *ngIf=\"submitted && f.location.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n                                             \n\n\n                            <button type=\"submit\"\n                                class=\"btn btn-primary\">{{actionType == 'Add'? (isSaving ? 'Creating...' : 'Create') : (isSaving ? 'Updating...' : 'Update') }}\n                                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner-edit',\n  templateUrl: './banner-edit.component.html',\n  styleUrls: ['./banner-edit.component.css']\n})\nexport class BannerEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-banner-add [actionType]=\"'Edit'\" [title]=\"'Edit Banner'\"></app-banner-add>","import { Component, OnInit } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilityService } from 'src/app/utilities/utilities.services';\nimport { paginationConfig } from 'src/app/constants';\nimport { apiUrls } from 'src/app/api-urls';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\n\n@Component({\n  selector: 'app-banner-list',\n  templateUrl: './banner-list.component.html',\n  styleUrls: ['./banner-list.component.css']\n})\nexport class BannerListComponent implements OnInit {\n\n  constructor(\n    private _api: ApiDataServices,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n    private _utils: UtilityService\n\n  ) { }\n\n  loading =true;\n  bannerList:any=[];\n  isDeleting = false;\n  isError = false;\n  paginationConfig: any = paginationConfig;\n\n  ngOnInit(): void {\n    this.getbannerList();\n  }\n\n  //Getting Bannerlist\n  getbannerList(){\n    this.loading = true;\n    this._api.postApiData(apiUrls.bannerList).subscribe(\n      (data:any)=> {\n        this.loading = false;\n        this.bannerList = data.data;\n        this.paginationConfig.totalItems = this.bannerList.length;\n      },\n      (error:any)=>{\n        this.loading=false;\n        this.isError=true;\n      }\n    );\n  }\n  \n  //Deleting Banner using (idBanner)\n  confirmDelete(res){\n    const deleteDialog = this.dialog.open(ConfirmdialogComponent,{\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure want to delete?'\n      }\n    });\n\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) this.deleteBanner(res);\n      }\n    )\n  }\n\n  deleteBanner(res){\n    this._api.putApiData(apiUrls.bannerDelete(res.idBanner)).subscribe(\n      (data:any) => {\n        this.isDeleting = false;\n        this.toastr.success('Banner deleted successfully', \"Daleted\");\n        this.deletebannerFromList(res);\n      },\n      error => {\n      },\n      () => {}\n    )\n  }\n\n  deletebannerFromList(res){\n    this.bannerList = this._utils.filterArrayObj(this.bannerList, 'idBanner', res.idBanner);\n  }\n\n   //Function for toggle button\n   toggleActive(banner, e) {\n    let status = e.checked ? 'true' : 'false';\n    let active = e.checked ? '0' : '1';\n    const activeDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure to ' + status + ' the ' + banner.bannerName + '?'\n      }\n    });\n\n    activeDialog.afterClosed().subscribe(\n      data => {\n        (data) ? 'this.toggleActiveBanner(user.id, e)' : this.bannerList = this._utils.changeArrayObjProp(this.bannerList, 'id', banner.id, 'false', !e.checked);\n      }\n    );\n  }\n\n  toggleActiveBanner(id, e) {\n    let data = {\n      id: id,\n      active: e.checked ? 1 : 0\n    };\n    this.bannerList = this._utils.changeArrayObjProp(this.bannerList, 'id', id, 'false', e.checked);\n    this._api.putApiData('this._urls.bannerActiveUrl', data).subscribe(\n      (data: any) => {\n        let id = data.data.id;\n        this.bannerList = this._utils.changeArrayObjProp(this.bannerList, 'id', id, 'false', e.checked);\n      },\n      error => {\n\n      },\n      () => {\n\n      });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Banner</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/banner/add'\">Add</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li class=\"active\">Banner</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>BannerList</h5>\n                        </div>\n                        <div *ngIf=\"!loading && bannerList.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"bannerList.length\" [paginationConfig]=\"paginationConfig\">\n                            </app-pagination>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"isDeleting\" class=\"text-center\">\n                            <h4>Deleting...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                       \n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>BannerName</th>\n                                    <th>Text</th>\n                                    <th>Location</th>\n                                    <th>Status</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let banner of bannerList | paginate: paginationConfig let i = index\">\n                                    <td>{{(((paginationConfig.currentPage - 1 )*(paginationConfig.itemsPerPage))) + (i + 1)}}</td>\n                                    <td>{{banner.bannerName}}</td>\n                                    <td>{{banner.text}}</td>\n                                    <td>{{banner.location }}</td>\n                                    <td>\n                                        <mat-slide-toggle color=\"$mat-green\" [(ngModel)]=\"banner.isActive\"\n                                            (change)=\"toggleActive(banner, $event)\"></mat-slide-toggle>\n                                    </td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only margin\"\n                                            [routerLink]=\"['/banner/edit',banner.idBanner]\"><i\n                                                class=\"fa fa-pencil\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only\"\n                                            (click)=\"confirmDelete(banner)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && bannerList.length == 0\" class=\"text-center\"><h4>No data found!</h4></div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n        </div>\n    </div>\n  </section>","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css']\n})\nexport class AddCategoryComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    private _fb: FormBuilder,\n    private _api: ApiDataServices,\n    private router: Router,\n    private _ac: ActivatedRoute) { }\n\n  @Input() actionType: string = 'Add';\n  @Input() title: string = 'Add New Category';\n  paramForm: FormGroup;\n  categoryForm: FormGroup;\n  submitted = false;\n  loading = false;\n  errorMessage = \"\";\n  isSaving = false;\n  idAdCategory: any = '';\n  categoryData: any = '';\n  parentList: any = [];\n\n  ngOnInit(): void {\n    this.createCategoryFormInit();\n    this.getCategoryList();\n    this._ac.params.subscribe(\n      params => {\n        this.idAdCategory = params.id;\n        if (this.idAdCategory) {\n          this.getCategory();\n        }\n      }\n    )\n  }\n  //Initializing Category form for validation\n  createCategoryFormInit() {\n    this.categoryForm = this._fb.group({\n      'categoryTitle': ['', [Validators.required]],\n      'parent': [0],\n      'categoryIcon': [''],\n      'categoryIconMobile': [''],\n      'categoryColor': [''],\n      'categoryHoverColor': [''],\n      'params': this._fb.array([]),\n    });\n  }\n\n  get f() { return this.categoryForm.controls; }\n  \n  //Calling Submit function\n  onSubmit() {\n    this.submitted = true;\n    \n    //Checking form validaton\n    if (this.categoryForm.valid) {\n      this.isSaving = true;\n\n      //Creating Category\n      if (this.actionType == 'Add') {\n        let data: any = {\n          categoryTitle: this.f.categoryTitle.value,\n          categoryIcon: this.f.categoryIcon.value,\n          categoryIconMobile: this.f.categoryIconMobile.value,\n          categoryColor: this.f.categoryColor.value,\n          categoryHoverColor: this.f.categoryHoverColor.value,\n        }\n\n        if (this.f.parent.value) {\n          data.parent = this.f.parent.value;\n        }\n        if (this.f.params.value) {\n          data.params = this.f.params.value;\n        }console.log(data);\n\n        this._api.postApiData(apiUrls.categoryCreate, data).subscribe(\n          (data: any) => {\n            console.log(data);\n            this.isSaving = false;\n            this.submitted = false;\n            \n              this.toastr.success('Category created successfully', \"Created\");\n              this.router.navigate(['category/list']);              \n            }, \n            (error: any) => {\n              this.errorMessage = error && error.message ? error.message : 'Sorry, Something went wrong';\n              this.isSaving = false;\n              this.submitted = false;\n            }\n          \n        );\n      }\n\n       //Editing Category details\n        if (this.actionType == 'Edit') {\n        let data: any = {\n          categoryTitle: this.f.categoryTitle.value,\n          categoryIcon: this.f.categoryIcon.value,\n          categoryIconMobile: this.f.categoryIconMobile.value,\n          categoryColor: this.f.categoryColor.value,\n          categoryHoverColor: this.f.categoryHoverColor.value,\n        }\n\n        if (this.f.parent.value) {\n          data.parent = this.f.parent.value;\n        }\n        if (this.f.params.value) {\n          data.params = this.f.params.value;\n        }\n        this._api.putApiData(apiUrls.categoryUpdate(this.idAdCategory), data).subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;            \n            this.toastr.success('Category updated successfully', \"Updated\");\n            this.router.navigate(['category/list'])\n              \n            },\n            (error: any) =>{\n              this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n              this.isSaving = false;\n              this.submitted = false;\n            \n          });\n\n      }\n\n    } else {\n      console.log(this.categoryForm)\n      return;\n    }\n  }\n\n   //Getting Category data using (idAdCategory)\n  getCategory() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.categoryGet(this.idAdCategory)).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.categoryData = data.data;\n        if (this.categoryData) {\n          this.loading = false;\n          this.setcategoryData(this.categoryData);\n        }\n      }\n    )\n\n  }\n\n  //Setting category data in edit form\n  setcategoryData(data) {\n    console.log(data);\n    let parameters = data.params;\n    let paramsFields = <FormArray>this.categoryForm.get('params');\n    paramsFields.removeAt(0);\n    this.categoryForm.patchValue({\n      'categoryTitle': data.categoryTitle,\n      'parent': data.parent,\n      'categoryIcon': data.categoryIcon,\n      'categoryIconMobile': data.categoryIconMobile,\n      'categoryColor': data.categoryColor,\n      'categoryHoverColor': data.categoryHoverColor\n\n    });\n    parameters.forEach(ele => {\n      paramsFields.push(this.newParams(ele.idAdParamSettings, ele.paramName, ele.paramDesc, ele.paramType, ele.pageBlock, ele.defaultValue))\n    });\n  }\n\n  //Getting category list\n  getCategoryList() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.categoryList).subscribe(\n      (data: any) => {\n        this.loading = false;\n        this.parentList = data.data;\n      },\n      error => {\n        this.loading = false;\n      }\n\n    );\n  }\n\n  //Getting parameter values in FormArray\n  params(): FormArray {\n    return this.categoryForm.get(\"params\") as FormArray\n  }\n  newParams(id = '', name = '', desc = '', type = '', block = '', value = ''): FormGroup {\n    return this._fb.group({\n      idAdParamSettings: [id],\n      paramName: [name],\n      paramDesc: [desc],\n      paramType: [type],\n      pageBlock: [block],\n      defaultValue: [value]\n    })\n  }\n\n  addParams() {\n    this.params().push(this.newParams());\n  }\n\n  removeParams(i: number) {\n    this.params().removeAt(i);\n  }\n\n  //Cancel Category\n  cancelcategoryCreate() {\n    this.router.navigate(['category/list']);\n  }\n}\n\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Category</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n                <li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li><a [routerLink]=\"'/category/list'\">Category</a></li>\n                <li class=\"active\">{{actionType}}</li>\n            </ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>{{title}}</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n                        <form *ngIf=\"!loading\" [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n                           \n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.categoryTitle.errors }\">\n                                <label for=\"categoryTitle\" class=\"control-label\">CategoryTitle</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"categoryTitle\" class=\"form-control\"\n                                        placeholder=\"categoryTitle\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.categoryTitle.errors }\" />\n                                    <span *ngIf=\"submitted && f.categoryTitle.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.parent.errors }\">\n                                <label for=\"parent\" class=\"control-label\">Parent</label>\n                                <select formControlName=\"parent\" class=\"form-control\">\n                                    <option *ngFor=\"let parent of parentList\" value=\"{{parent.idAdCategory}}\">\n                                        {{parent.categoryTitle}}</option>\n                                </select>\n                                <span *ngIf=\"submitted && f.parent.errors\" class=\"help-block\">This field is\n                                    required.</span>\n                            </div>\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.categoryIcon.errors }\">\n                                <label for=\"categoryIcon\" class=\"control-label\">CategoryIcon</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"categoryIcon\" class=\"form-control\"\n                                        placeholder=\"categoryIcon\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.categoryIcon.errors }\" />\n                                    <span *ngIf=\"submitted && f.categoryIcon.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\"\n                                [ngClass]=\"{ 'has-error': submitted && f.categoryIconMobile.errors }\">\n                                <label for=\"categoryIconMobile\" class=\"control-label\">CategoryIconMobile</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"categoryIconMobile\" class=\"form-control\"\n                                        placeholder=\"categoryIconMobile\" \n                                        [ngClass]=\"{ 'is-invalid': submitted && f.categoryIconMobile.errors }\" />\n                                    <span *ngIf=\"submitted && f.categoryIconMobile.errors\" class=\"help-block\">This field\n                                        is\n                                        required.</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.categoryColor.errors }\">\n                                <label for=\"categoryColor\" class=\"control-label\">CategoryColor</label>\n                                <div class=\"color\">\n                                    <input type=\"color\" value=\"#ff0000\" formControlName=\"categoryColor\" class=\"form-control\"\n                                        placeholder=\"categoryColor\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.categoryColor.errors }\" />\n                                    <span *ngIf=\"submitted && f.categoryColor.errors\" class=\"help-block\">This field is\n                                        required.</span>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\"\n                                [ngClass]=\"{ 'has-error': submitted && f.categoryHoverColor.errors }\">\n                                <label for=\"categoryHoverColor\" class=\"control-label\">CategoryHoverColor</label>\n                                <div class=\"color\">\n                                    <input type=\"color\" value=\"#ff0000\" formControlName=\"categoryHoverColor\" class=\"form-control\"\n                                        placeholder=\"categoryHoverColor\" \n                                        [ngClass]=\"{ 'is-invalid': submitted && f.categoryHoverColor.errors }\"/>\n                                        <span *ngIf=\"submitted && f.categoryHoverColor.errors\" class=\"help-block\">This field\n                                        is required.</span>\n                                </div>\n                            </div>\n\n\n                            <table class=\"table table-bordered\" formArrayName=\"params\">\n                                <tr>\n                                    <th colspan=\"5\">Add Params:</th>\n                                    <th width=\"150px\"><button type=\"button\" (click)=\"addParams()\"\n                                            class=\"btn btn-primary \"><i class=\"fa fa-plus\"\n                                                aria-hidden=\"true\"></i></button></th>\n                                </tr>\n                                <tr *ngFor=\"let param of params().controls; let i=index\" [formGroupName]=\"i\">\n                                    <td>\n                                        Parameter Name :\n                                        <input type=\"text\" formControlName=\"paramName\" class=\"form-control\">\n                                    </td>\n\n                                    <td class=\"cmp\">\n                                        Parameter Type :\n                                        <select formControlName=\"paramType\" class=\"form-control\">\n                                            <option>text</option>\n                                            <option>checkbox</option>\n                                            <option>radio</option>\n                                            <option>options</option>\n                                            <option>image</option>\n                                            <option>file</option>\n                                        </select>\n                                    </td>\n                                    <td>\n                                        Parameter Desc:\n                                        <input type=\"text\" formControlName=\"paramDesc\" class=\"form-control\">\n                                    </td>\n\n                                    <td class=\"cmp\">\n                                        Page Block :\n                                        <select formControlName=\"pageBlock\" class=\"form-control\">\n                                            <option>Details</option>\n                                            <option>Media</option>\n                                            <option>Location</option>\n                                            <option>Price</option>\n                                            <option>Contact</option>\n                                        </select>\n                                    </td>\n\n                                    <td>\n                                        Default Value:\n                                        <input type=\"text\" formControlName=\"defaultValue\"\n                                            placeholder=\"Values seperated with comma\" class=\"form-control\">\n                                    </td>\n                                    <td>\n                                        <button (click)=\"removeParams(i)\" class=\"btn btn-danger\"><i class=\"fa fa-times\"\n                                                aria-hidden=\"true\"></i></button>\n                                    </td>\n                                </tr>\n                            </table>\n                            <button type=\"submit\"\n                                class=\"btn btn-primary\">{{actionType == 'Add'? (isSaving ? 'Creating...' : 'Create') : (isSaving ? 'Updating...' : 'Update') }}\n                                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { CategoryList } from 'src/app/models/category';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilityService } from 'src/app/utilities/utilities.services';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\nexport class CategoryListComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    private api: ApiDataServices,\n    private dialog: MatDialog,\n    private _utils: UtilityService\n  ) { }\n\n  categoryList: any = [];\n  selectedCategoryList: CategoryList = new CategoryList();\n  loading = true;\n  errorMessage = \"Sorry, Something went wrong\";\n  paginationConfig: any = paginationConfig;\n\n  ngOnInit(): void {\n    this.getCategoryList();\n    console.log(this.paginationConfig);\n  }\n\n  //Getting Category list\n  getCategoryList() {\n    this.loading = true;\n    this.api.postApiData(apiUrls.categoryList)\n      .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.categoryList = data.data;\n          this.paginationConfig.totalItems = this.categoryList.length;\n        },\n        error => {\n          this.loading = false;\n        }\n\n      );\n  }\n\n  //Deleting Category using (idAdCategory)\n  confirmDelete(res) {\n    const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure to delete?'\n      }\n    });\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) this.deleteCategory(res);\n      }\n    );\n  }\n  deleteCategory(res) {\n    this.api.putApiData(apiUrls.categoryDelete(res.idAdCategory)).pipe()\n      .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.toastr.success('Category  deleted successfully', \"Deleted\");\n          this.deletecategoryFromList(res);\n        },\n        error => {\n\n        },\n        () => { }\n      );\n  }\n  deletecategoryFromList(res) {\n    this.categoryList = this._utils.filterArrayObj(this.categoryList, 'idAdCategory', res.idAdCategory);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Category</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/category/add'\">Add</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n                <li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li class=\"active\">Category</li>\n            </ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n\n\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>CategoryList</h5>\n                        </div>\n                        <div *ngIf=\"!loading && categoryList.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"categoryList.length\" [paginationConfig]=\"paginationConfig\">\n                            </app-pagination>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n\n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>CategoryCode</th>\n                                    <th>CategoryTitle</th>\n                                    <th>Parent</th>\n                                    <th>CategoryIcon</th>\n                                    <th>CategoryIconMobile</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let category of categoryList | paginate: paginationConfig let i = index\">\n                                    <td>{{(((paginationConfig.currentPage - 1 )*(paginationConfig.itemsPerPage))) + (i + 1)}}</td>\n                                    <td scope=\"row\">{{category.categoryCode}}</td>\n                                    <td>{{category.categoryTitle}}</td>\n                                    <td>{{category.parentName }}</td>\n                                    <td>{{category.categoryIcon}}</td>\n                                    <td>{{category.categoryIconMobile}}</td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only margin\"\n                                            [routerLink]=\"['/category/update',category.idAdCategory]\"><i\n                                                class=\"fa fa-pencil\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only\"\n                                            (click)=\"confirmDelete(category)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && categoryList.length == 0\" class=\"text-center\">\n                            <h4>No data found!</h4>\n                        </div>\n                        \n                    </div>\n                    <!-- /.panel -->\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})\nexport class EditCategoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-add-category [actionType]=\"'Edit'\" [title]=\"'Edit Category'\"></app-add-category>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmdialog',\n  templateUrl: './confirmdialog.component.html',\n  styleUrls: ['./confirmdialog.component.css']\n})\nexport class ConfirmdialogComponent implements OnInit {\n\n  \n  constructor(@Inject(MAT_DIALOG_DATA) public data:any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n    <h1 mat-dialog-title>{{data.message}}</h1>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">Yes</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">No</button>\n  </mat-dialog-actions>\n  \n","import { Component, OnInit, Input, EventEmitter, HostBinding, HostListener, Output, ElementRef } from '@angular/core';\nimport { MediaFile } from 'src/app/models/media-file';\nimport { MEDIA_FILES_DIV_ID } from 'src/app/constants';\n\n@Component({\n  selector: 'dnd',\n  templateUrl: './drag-n-drop.component.html',\n  styleUrls: ['./drag-n-drop.component.scss']\n})\nexport class DragNDropComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  mediaFilesDivId = MEDIA_FILES_DIV_ID;\n  mediaFiles: MediaFile[] = [];\n  @Input() showProgress = true;\n  @Input() uploadProgress = 0;\n  @HostBinding('class.fileover') fileOver: boolean;\n  @Output() fileDropped = new EventEmitter<any>();\n  \n\n  /**\n   * on file drop handler\n   */\n  onFileDropped($event) {\n    this.prepareFilesList($event);\n  }\n\n  /**\n   * handle file from browsing\n   */\n  fileBrowseHandler(files) {\n    this.prepareFilesList(files);\n  }\n\n  /**\n   * Delete file from files list\n   * @param index (File index)\n   */\n  deleteFile(index: number) {\n    this.mediaFiles.splice(index, 1);\n  }\n\n  /**\n   * Simulate the upload process\n   */\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.mediaFiles.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.mediaFiles[index].uploadProgress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.mediaFiles[index].uploadProgress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n\n  /**\n   * Convert Files list to normal array list\n   * @param files (Files List)\n   */\n  prepareFilesList(files: Array<any>) {\n    for (const file of files) {\n      file.uploadProgress = 0;\n      this.setFile(file);\n    }\n    this.uploadFilesSimulator(0);\n  }\n\n  /**\n   * format bytes\n   * @param bytes (File size in bytes)\n   * @param decimals (Decimals point)\n   */\n  formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n  // Dragover listener\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.fileOver = true;\n  }\n\n  // Dragleave listener\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.fileOver = false;\n  }\n\n  // Drop listener\n  @HostListener('drop', ['$event']) public ondrop(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.fileOver = false;\n    if (evt.dataTransfer.files.length > 0) {\n      this.fileDropped.emit(evt.dataTransfer.files);\n      for(let f = 0; f < evt.dataTransfer.files.length; f++){\n        this.setFile(evt.dataTransfer.files[f]);\n      }\n    }\n  }\n\n  setFile(file) {\n    var reader = new FileReader();\n      let mediaFile = new MediaFile();\n      //Get base64\n      reader.onload = function (event) {\n        mediaFile.base64 = event.target.result.toString();\n        // will used in Advertisement update an existing media to save, See AvdertisementEdit Component for more.\n        mediaFile.image = mediaFile.base64;\n      };\n      let d = reader.readAsDataURL(file);\n      mediaFile.size = file.size;\n      mediaFile.name = file.name;\n      mediaFile.idAdGallery = \"\";\n      this.mediaFiles.push(mediaFile);\n  }\n\n}\n","<div class=\"container\" (fileDropped)=\"onFileDropped($event)\">\n\t<input type=\"file\" #fileDropRef id=\"fileDropRef\" multiple (change)=\"fileBrowseHandler($event.target.files)\" />\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"63\" height=\"64\" viewBox=\"0 0 63 64\">\n\t\t<g fill=\"#3B454F\" fill-rule=\"nonzero\">\n\t\t\t<path\n\t\t\t\td=\"M42.656 15.135a1.953 1.953 0 0 1-1.391-.578L31.5 4.795l-9.765 9.762a1.97 1.97 0 1 1-2.785-2.785L30.106.616a1.97 1.97 0 0 1 2.785 0l11.157 11.156a1.97 1.97 0 0 1-1.392 3.363z\" />\n\t\t\t<path\n\t\t\t\td=\"M31.5 36.791a1.97 1.97 0 0 1-1.969-1.969V2.01a1.97 1.97 0 0 1 3.938 0v32.812a1.97 1.97 0 0 1-1.969 1.969z\" />\n\t\t\t<path\n\t\t\t\td=\"M55.781 63.041H7.22A7.225 7.225 0 0 1 0 55.822V41.385a4.599 4.599 0 0 1 4.594-4.594h7.234a4.567 4.567 0 0 1 4.402 3.276l2.814 9.382a.658.658 0 0 0 .628.467h23.656a.658.658 0 0 0 .628-.467l2.814-9.385a4.572 4.572 0 0 1 4.402-3.273h7.234A4.599 4.599 0 0 1 63 41.385v14.437a7.225 7.225 0 0 1-7.219 7.219zM4.594 40.729a.656.656 0 0 0-.657.656v14.437a3.286 3.286 0 0 0 3.282 3.282H55.78a3.286 3.286 0 0 0 3.282-3.282V41.385a.656.656 0 0 0-.657-.656h-7.234a.65.65 0 0 0-.628.467L47.73 50.58a4.628 4.628 0 0 1-4.402 3.274H19.672a4.567 4.567 0 0 1-4.402-3.276l-2.814-9.382a.65.65 0 0 0-.628-.467H4.594z\" />\n\t\t</g>\n\t</svg>\n\n\t<h3>Drag and drop file(s) here</h3>\n\t<h3>or</h3>\n\t<label for=\"fileDropRef\">Browse for file</label>\n</div>\n<div class=\"files-list\">\n\t<div class=\"col-md-3 b-b-1eee mt-50\" *ngFor=\"let file of mediaFiles; let i = index\">\n        <div class=\"text-center max-height-200\">\n            <img class=\"dnd-img\" src=\"{{file.url ? file.url : file.base64}}\">\n        </div>\n\t\t<div class=\"text-center\">\n\t\t\t<h4 class=\"name text-overflow\">\n\t\t\t\t{{ file?.name }}\n\t\t\t</h4>\n\t\t\t<p class=\"size\">\n\t\t\t\t{{ formatBytes(file?.size) }}\n\t\t\t</p>\n\t\t\t<div *ngIf=\"showProgress\" class=\"progress-cont\">\n                <div class=\"progress\" [style.width]=\"uploadProgress + '%'\"></div>\n            </div>\n\t\t</div>\n        <div class=\"text-center\">\n            <div class=\"mt-20 mb-20\" (click)=\"deleteFile(i)\"> Delete \n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"18\" viewBox=\"0 0 14 18\">\n                    <path fill=\"#B1B1B1\" fill-rule=\"nonzero\"\n                        d=\"M1 16c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v10zm3.17-7.83a.996.996 0 0 1 1.41 0L7 9.59l1.42-1.42a.996.996 0 1 1 1.41 1.41L8.41 11l1.42 1.42a.996.996 0 1 1-1.41 1.41L7 12.41l-1.42 1.42a.996.996 0 1 1-1.41-1.41L5.59 11 4.17 9.58a.996.996 0 0 1 0-1.41zM10.5 1L9.79.29C9.61.11 9.35 0 9.09 0H4.91c-.26 0-.52.11-.7.29L3.5 1H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1h-2.5z\" />\n                </svg>\n            </div>\n        </div>\n\t</div>\n</div>\n<div class=\"hide\" id=\"{{mediaFilesDivId}}\">{{mediaFiles | json}}</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  constructor() { }\n  @Input() totalItems = 0;\n  @Input() paginationConfig: any = {};\n  ngOnInit(): void {\n  }\n\n  pageChanged(event) {\n    this.paginationConfig.currentPage = event;\n  }\n\n}\n","<pagination-controls\n    (pageChange)=\"pageChanged($event)\"\n    (pageBoundsCorrection)=\"pageChanged($event)\"\n    maxSize=\"10\"\n    previousLabel=\"Previous\"\n    nextLabel=\"Next\">\n</pagination-controls>\n","export const MEDIA_FILES_DIV_ID = \"medialFilesDivId\";\nexport function getMediaFiles() {\n    let files = JSON.parse(document.getElementById(MEDIA_FILES_DIV_ID).innerHTML);\n    return files; \n};\n\nexport const paginationConfig = {itemsPerPage: 10, currentPage: 1, totalItems: 0, maxSize: 10, previousLabel: \"Previous\", nextLabel: \"Next\"}","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageKeys } from '../enums';\nimport { AdminUser } from '../models/admin-user';\n\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n    adminUser: AdminUser;\n    constructor() {\n        if(localStorage.getItem(LocalStorageKeys.AdminUser)) {\n            this.adminUser = JSON.parse(localStorage.getItem(LocalStorageKeys.AdminUser));\n        } else {\n            // should refresh the page while redirecting\n            window.location.href = '/accounts/login';\n        }\n    }\n\n\tngOnInit(){}\n\n    ngOnDestroy() {}\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-sm-6\">\n            <h2 class=\"title\">Dashboard</h2>\n            <p class=\"sub-title\">Under dev</p>\n        </div>\n        <!-- /.col-sm-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-sm-6\">\n            <ul class=\"breadcrumb\">\n                <li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li class=\"active\">Dashboard</li>\n            </ul>\n        </div>\n        <!-- /.col-sm-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container-fluid -->\n<section class=\"section pt-10\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel border-primary no-border border-3-top\" data-panel-control>\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title text-center\">\n                            <h1 class=\"mt-20 mb-20\">Under development</h1>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n            <!-- /.col-md-6 -->\n        </div>\n        <!-- /.row -->\n    </div>\n    <!-- /.container-fluid -->\n</section>\n<!-- /.section -->","export enum LocalStorageKeys {\n    Token = 'token',\n    User = 'user',\n    AdminUser = 'adminUser'\n}\n\nexport enum MediaType {\n    Image = 1,\n    Audio = 2,\n    Video = 3\n}\n\nexport enum CategoryParamTypes {\n    Text = 'text',\n    Options = 'options',\n    Radio = 'radio'\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-404',\n  templateUrl: './error-404.component.html',\n  styleUrls: ['./error-404.component.scss']\n})\nexport class Error404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"col-md-offset-3 col-md-6 mt-50 pt-50\">\n            <div class=\"panel\">\n                <div class=\"panel-body p-30\">\n                    <div class=\"error-box\">\n                        <i class=\"fa fa-exclamation-triangle error-icon\"></i>\n                        <h1 class=\"error-title\">404</h1>\n                        <p class=\"sub-title\">Page Not Found!</p>\n                        <p class=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse.</p>\n                        <a [routerLink]=\"'/dashboard'\" class=\"btn btn-primary btn-lg btn-rounded\">Back To Dashboard</a>\n                    </div>\n                    <!-- /.error-box -->\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <!-- /.container-fluid -->\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-500',\n  templateUrl: './error-500.component.html',\n  styleUrls: ['./error-500.component.scss']\n})\nexport class Error500Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"col-md-offset-3 col-md-6 mt-50 pt-50\">\n            <div class=\"panel\">\n                <div class=\"panel-body p-30\">\n                    <div class=\"error-box\">\n                        <i class=\"fa fa-exclamation-circle error-icon\"></i>\n                        <h1 class=\"error-title\">500</h1>\n                        <p class=\"sub-title\">Error Occurred!</p>\n                        <p class=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse.</p>\n                        <a [routerLink]=\"'/dashboard'\" class=\"btn btn-primary btn-lg btn-rounded\">Back To Dashboard</a>\n                    </div>\n                    <!-- /.error-box -->\n                </div>\n            </div>\n            <!-- /.panel -->\n        </div>\n        <!-- /.col-md-offset-3 col-md-6 -->\n    </div>\n    <!-- /.container-fluid -->\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from 'src/app/models/location';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-locations-add',\n  templateUrl: './locations-add.component.html',\n  styleUrls: ['./locations-add.component.css']\n})\nexport class LocationsAddComponent implements OnInit {\n\n  constructor(private api: ApiDataServices,  \n    private formBuilder: FormBuilder,\n    private route: Router) { }\n\n    locationForm: FormGroup;\n    submitted = false;\n    isError = false;\n    errorMessage = \"\";\n    isSaving = false;\n    loadingLocations = false;\n    locations: Location[];\n    ngOnInit(): void {\n      this.getLocations();\n      this.locationForm = this.formBuilder.group({\n        locationName: ['', Validators.required],\n        parent: ['', Validators.required]\n      });\n    }\n  \n    \n    // convenience getter for easy access to form fields\n    get f() { return this.locationForm.controls; }\n    \n    getLocations(){\n      this.loadingLocations = true;\n      this.api.postApiData(apiUrls.locationList).pipe()\n      .subscribe(\n          (data: any) => {\n            this.loadingLocations = false;\n            this.locations = data.data;\n          },\n          error => {\n            this.loadingLocations = false;\n          });\n    }\n\n    onSubmit(){\n      this.submitted = true;\n      if (this.locationForm.invalid) {\n        return;\n      }\n      this.isError = false;\n      this.isSaving = true;\n      this.api.postApiData(apiUrls.locationCreate, this.locationForm.getRawValue()).pipe()\n      .subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.route.navigate(['/locations/list']);\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.isSaving = false;\n            this.submitted = false;\n            this.isError = true;\n          });\n    }\n  \n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Locations</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li><a [routerLink]=\"'/locations/list'\">Locations</a></li>\n\t\t\t\t<li class=\"active\">Add</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Add New Location</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <form [formGroup]=\"locationForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.locationName.errors }\">\n                                <label for=\"locationName\" class=\"control-label\">Location Name</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"locationName\" class=\"form-control\" placeholder=\"Location Name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.locationName.errors }\" />\n                                    <span *ngIf=\"submitted && f.locationName.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <h6 *ngIf=\"loadingLocations\">Loading locations...<i class=\"fa fa-spinner fa-spin\"></i></h6>\n                            <div *ngIf=\"!loadingLocations\" class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.parent.errors }\">\n                                <label for=\"parent\" class=\"control-label\">Parent</label>\n                                <div class=\"\">\n                                    <select formControlName=\"parent\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.parent.errors }\">\n                                        <option value=\"\">-- Select Location --</option>\n                                        <option *ngFor=\"let location of locations\" value=\"{{location.idLocation}}\">{{location.locationName}}</option>\n                                    </select>\n                                    <span *ngIf=\"submitted && f.parent.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">{{isSaving ? 'Creating...' : 'Create' }} \n                                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Location } from 'src/app/models/location';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-locations-edit',\n  templateUrl: './locations-edit.component.html',\n  styleUrls: ['./locations-edit.component.css']\n})\nexport class LocationsEditComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n    private api: ApiDataServices,\n    private route: Router, private actRoute: ActivatedRoute) { }\n\n  locationForm: FormGroup;\n  submitted = false;\n  isError = false;\n  loading = true;\n  isSaving = false;\n  errorMessage = \"\";\n  location: Location;\n  loadingLocations = false;\n  locations: any[] = [];\n  ngOnInit(): void {\n    this.loading = true;\n    this.location = new Location();\n    this.actRoute.paramMap.subscribe(params => {\n      this.location.idLocation = params.get('id');\n      this.getLocation();\n      this.getLocations();\n    });\n  }\n\n  getLocations(){\n    this.loadingLocations = true;\n    this.api.postApiData(apiUrls.locationList).pipe()\n    .subscribe(\n        (data: any) => {\n          this.loadingLocations = false;\n          this.locations = data.data;\n        },\n        error => {\n          this.loadingLocations = false;\n        });\n  }\n\n  getLocation(){\n    this.loading = true;\n    this.api.postApiData(apiUrls.locationGet(this.location.idLocation)).pipe()\n    .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.location = data.data\n          this.locationForm = this.formBuilder.group({\n            locationName: [this.location.locationName, Validators.required],\n            parent: [this.location.parent, Validators.required]\n          });\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n          this.errorMessage = error && error.error.errors.error ? error.error.errors.error : 'Sorry, something went wrong';\n        });\n  }\n  \n  // convenience getter for easy access to form fields\n  get f() { return this.locationForm.controls; }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.locationForm.invalid) {\n      return;\n    }\n    this.isError = false;\n    this.isSaving = true;\n    this.api.putApiData(apiUrls.locationUpdate(this.location.idLocation), this.locationForm.getRawValue()).pipe()\n    .subscribe(\n        (data: any) => {\n          this.isSaving = false;\n          this.submitted = false;\n          this.route.navigate(['/locations/list']);\n        },\n        (error:any) => {\n          this.isSaving = false;\n          this.submitted = false;\n          this.isError = true;\n          this.errorMessage = error && error.error.errors.error ? error.error.errors.error : 'Sorry, something went wrong.';\n        });\n  }\n\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Locations</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li><a [routerLink]=\"'/locations/list'\">Locations</a></li>\n\t\t\t\t<li class=\"active\">Edit</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container-fluid -->\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Edit Location</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loading\" class=\"text-center\"><h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <form *ngIf=\"!loading\" [formGroup]=\"locationForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.locationName.errors }\">\n                                <label for=\"locationName\" class=\"control-label\">Location Name</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"locationName\" class=\"form-control\" placeholder=\"Location Name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.locationName.errors }\" />\n                                    <span *ngIf=\"submitted && f.locationName.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <h6 *ngIf=\"loadingLocations\">Loading locations...<i class=\"fa fa-spinner fa-spin\"></i></h6>\n                            <div *ngIf=\"!loadingLocations\" class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.parent.errors }\">\n                                <label for=\"parent\" class=\"control-label\">Parent</label>\n                                <div class=\"\">\n                                    <select formControlName=\"parent\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.parent.errors }\">\n                                        <option value=\"\">-- Select Location --</option>\n                                        <option *ngFor=\"let location of locations\" value=\"{{location.idLocation}}\">{{location.locationName}}</option>\n                                    </select>\n                                    <span *ngIf=\"submitted && f.parent.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">{{isSaving ? 'Saving...' : 'Save' }} \n                                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { Location } from 'src/app/models/location';\nimport { apiUrls } from 'src/app/api-urls';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\n@Component({\n  selector: 'app-locations-list',\n  templateUrl: './locations-list.component.html',\n  styleUrls: ['./locations-list.component.css']\n})\nexport class LocationsListComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private api: ApiDataServices, private toastr: ToastrService) { }\n  @ViewChild('deleteModalButton') deleteModalButton: ElementRef;\n  @ViewChild('cancelModalButton') cancelModalButton: ElementRef;\n  locations: Location[];\n  loading = true;\n  isDeleting = false;\n  isError = false;\n  errorMessage = \"Sorry, Something went wrong\";\n  selectedLocation: Location = new Location();\n  paginationConfig: any = paginationConfig;\n  ngOnInit(): void {\n    this.locations = [];\n    this.getLocations();\n  }\n\n  getLocations(){\n    this.loading = true;\n    this.api.postApiData(apiUrls.locationList).pipe()\n    .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.locations = data.data;\n          this.paginationConfig.totalItems = this.locations.length;\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n        });\n  }\n\n  showDeleteModal(location) {\n    this.isDeleting = false;\n    // let inputElement: HTMLElement = this.deleteModalButton.nativeElement as HTMLElement;\n    // inputElement.click();\n    \n    const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure, you want to delete?'\n      }\n    });\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) {\n          this.selectedLocation = location;\n          this.delete();\n        }\n      }\n    );\n  }\n\n  delete(){\n    if(this.selectedLocation){\n      this.isDeleting = true;\n      this.api.putApiData(apiUrls.locationDelete(this.selectedLocation.idLocation)).pipe()\n      .subscribe(\n        (data: any) => {\n          this.isDeleting = false;\n          // let inputElement: HTMLElement = this.cancelModalButton.nativeElement as HTMLElement;\n          // inputElement.click();\n          this.toastr.success('Location deleted successfully', \"Deleted\");\n          let index = this.locations.indexOf(this.selectedLocation);\n          if(index >= -1){\n            this.locations.splice(index, 1);\n          }\n          this.selectedLocation = new Location();\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n        });\n    } else {\n      alert('Location not found');\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Locations</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/locations/add'\">Add</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li class=\"active\">Locations</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Locations</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"loading\" class=\"text-center\"><h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>Location Id</th>\n                                    <th>Name</th>\n                                    <th>Code</th>\n                                    <th>Parent</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let location of locations | paginate: paginationConfig let i = index\">\n                                    <td>{{i + 1}}</td>\n                                    <td scope=\"row\">{{location.idLocation}}</td>\n                                    <td>{{location.locationName}}</td>\n                                    <td>{{location.locationCode}}</td>\n                                    <td>{{location.parent}}</td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only mr-10\" [routerLink]=\"['/locations/edit',location.idLocation]\"><i class=\"fa fa-pencil\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only\" (click)=\"showDeleteModal(location)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && locations.length == 0\" class=\"text-center\"><h4>No data found!</h4></div>\n                        <div *ngIf=\"!loading && locations.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"locations.length\" [paginationConfig]=\"paginationConfig\"></app-pagination>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- Delete Modal tigger button -->\n<input type=\"button\" style=\"display:none;\" #deleteModalButton id=\"deleteModalButton\" (click)=\"defaultModal.show()\" />\n<!-- Delete Modal -->\n\n<div class=\"modal fade\" bsModal id=\"myModal\" tabindex=\"-1\" role=\"dialog\" #defaultModal=\"bs-modal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4>Delete</h4>\n            </div>\n            <div class=\"modal-body\">\n                <div *ngIf=\"isError\" class=\"text-center\"><div class=\"alert alert-danger\">{{errorMessage}}</div></div>\n                <h4 class=\"text-center\">Are you sure you want to delete {{selectedLocation.locationName}} ? </h4>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"btn-group\" role=\"group\">\n                    <button type=\"button\" #cancelModalButton class=\"btn btn-gray mr-10\" (click)=\"defaultModal.hide()\">Cancel</button>\n                    <button type=\"button\" class=\"btn bg-danger\" (click)=\"delete()\">{{isDeleting ? 'Deleting...' : 'Delete'}} \n                        <i *ngIf=\"isDeleting\" class=\"fa fa-spinner fa-spin\"></i>\n                    </button>\n                </div>\n                <!-- /.btn-group -->\n            </div>\n        </div>\n    </div>\n</div>","import { LocalStorageKeys } from '../enums';\n\nexport class AdminUser {\n    idUser: string;\n    accessKey: string;\n    publicKey: string;\n    sessionId: string;\n    sessionKey: string;\n    get(): AdminUser{\n        return JSON.parse(localStorage.getItem(LocalStorageKeys.AdminUser));\n    }\n}","export class Advertisement {\n    idAdvertisement: string;\n    idUser: string;\n    idAdCategory: string;\n    idLocation: string;\n    adTitle: string;\n    adDesc: string;\n    price: number;\n    media: any[];\n}","export class CategoryList {\n    idAdCategory: string;\n    categoryCode: string;\n    categoryTitle: string;\n    parent: string;\n    parentName: string;\n    categoryIcon: string;\n    categoryIconMobile: string;\n    categoryColor: string;\n    categoryHoverColor: string;\n    params: any[];\n}","export class Location {\n    idLocation: string;\n    locationName: string;\n    locationCode: string;\n    parent: string;\n}","import { MediaType } from '../enums';\n\nexport class MediaFile {\n    id: any;\n    size: number;\n    uploadProgress: number;\n    mediaType: MediaType;\n    idAdGallery: string;\n    image:string;\n    type: string;\n    name: string;\n    url: string;\n    base64: string;\n    extension: string;\n}\n","export class UserAcl {\n    idUserAcl: string;\n    namespace: string;\n    route: string;\n    path: string;\n    rule: string;\n    isActive: number;\n    isChecked: boolean; // using in edit-user-type component for checkbox\n}","import { UserAcl } from './user-Acl';\n\nexport class UserType {\n    idUserType: string;\n    userTypeSlug: string;\n    userTypeNum: string;\n    userTypeName: string;\n    userAcls: UserAcl[];\n}","\nimport { NgModule } from '@angular/core';\n\n/* Material Modules */\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { MatSortModule } from \"@angular/material/sort\";\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatGridListModule} from '@angular/material/grid-list';\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule\n  ],\n  exports: [\n    MatInputModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatGridListModule\n   ],\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'app-top-navbar',\n\ttemplateUrl: './top-navbar.component.html',\n\tstyleUrls: ['./top-navbar.component.scss']\n})\nexport class TopNavbarComponent implements OnInit {\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n    stopPro(event) {\n        event.stopPropagation();\n        return false;\n    }\n\n}\n","<!-- ========== TOP NAVBAR ========== -->\n<nav class=\"navbar top-navbar bg-white box-shadow\">\n\t<div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"navbar-header no-padding\">\n    \t\t\t<a class=\"navbar-brand\" href=\"/dashboard\">\n    \t\t\t    <img src=\"../../assets/images/logo-dark.svg\" alt=\"Admin Template\" class=\"logo\">\n    \t\t\t</a>\n                <span class=\"small-nav-handle hidden-sm hidden-xs\"><i class=\"fa fa-outdent\"></i></span>\n    \t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse-1\" aria-expanded=\"false\">\n    \t\t\t\t<span class=\"sr-only\">Toggle navigation</span>\n    \t\t\t\t<i class=\"fa fa-ellipsis-v\"></i>\n    \t\t\t</button>\n                <button type=\"button\" class=\"navbar-toggle mobile-nav-toggle\" >\n    \t\t\t\t<i class=\"fa fa-bars\"></i>\n    \t\t\t</button>\n    \t\t</div>\n            <!-- /.navbar-header -->\n\n    \t\t<div class=\"collapse navbar-collapse\" id=\"navbar-collapse-1\">\n                <!-- /.nav navbar-nav -->\n\n    \t\t\t<ul class=\"nav navbar-nav navbar-right\" data-dropdown-in=\"fadeIn\" data-dropdown-out=\"fadeOut\">\n                    \n\n                    <li class=\"dropdown\" dropdown>\n    \t\t\t\t\t<a href=\"#\" dropdownToggle class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" (click)=\"stopPro($event)\">John Doe <span class=\"caret\"></span></a>\n    \t\t\t\t\t<ul class=\"dropdown-menu profile-dropdown\" *dropdownMenu role=\"menu\">\n    \t\t\t\t\t\t<li class=\"profile-menu bg-gray\">\n    \t\t\t\t\t\t    <div class=\"\">\n    \t\t\t\t\t\t        <img src=\"../../assets/images/user.png\" alt=\"John Doe\" class=\"img-circle profile-img\">\n                                    <div class=\"profile-name\">\n                                        <h6>Demo User</h6>\n                                        <a href=\"pages-profile.html\">View Profile</a>\n                                    </div>\n                                    <div class=\"clearfix\"></div>\n    \t\t\t\t\t\t    </div>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li><a href=\"#\"><i class=\"fa fa-cog\"></i> Settings</a></li>\n    \t\t\t\t\t\t<li><a href=\"#\"><i class=\"fa fa-sliders\"></i> Account Details</a></li>\n    \t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n    \t\t\t\t\t\t<li><a href=\"/accounts/login\" class=\"color-danger text-center\"><i class=\"fa fa-sign-out\"></i> Logout</a></li>\n    \t\t\t\t\t</ul>\n    \t\t\t\t</li>\n                    <!-- /.dropdown -->\n    \t\t\t</ul>\n                <!-- /.nav navbar-nav navbar-right -->\n    \t\t</div>\n    \t\t<!-- /.navbar-collapse -->\n        </div>\n        <!-- /.row -->\n\t</div>\n\t<!-- /.container-fluid -->\n</nav>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { apiUrls } from 'src/app/api-urls';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\n\n\n@Component({\n  selector: 'app-add-user-acl',\n  templateUrl: './add-user-acl.component.html',\n  styleUrls: ['./add-user-acl.component.css'],\n})\nexport class AddUserAclComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    private _fb: FormBuilder,\n    private _api: ApiDataServices,\n    private router: Router,\n    private _ac: ActivatedRoute\n  ) { }\n  @Input() actionType: string = 'Add';\n  @Input() title: string = 'Add New UserACL';\n  userAclForm: FormGroup;\n  submitted = false;\n  loading = false;\n  errorMessage = \"\";\n  isSaving = false;\n  idUserAcl: any = '';\n  UserAclData: any = '';\n  UsertypeList: any[];\n  usertype: string;\n\n\n\n  ngOnInit() {\n    this.createUserACLFormInit();\n    this._ac.params.subscribe(\n      params => {\n        this.idUserAcl = params.id;\n        if (this.idUserAcl) {\n          this.getUserAcl();\n        }\n      }\n    )\n  }\n  \n  //Initializing Useracl form for validation\n  createUserACLFormInit() {\n    this.userAclForm = this._fb.group({\n      'namespace': ['', [Validators.required]],\n      'route': ['', [Validators.required]],\n      'path': ['', [Validators.required]]\n    });\n  }\n\n  get f() { return this.userAclForm.controls; }\n  \n  //Calling Submit function\n  onSubmit() {\n    this.submitted = true;\n\n    //Checking form validaton\n    if (this.userAclForm.valid) {\n      this.isSaving = true;\n\n      //Creating Useracl\n      if (this.actionType == 'Add') {\n        let data: any = {\n          namespace: this.f.namespace.value,\n          path: this.f.path.value,\n          route: this.f.route.value\n        }\n        this._api.postApiData(apiUrls.userAclCreate, data).subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('UserACL created successfully', \"Created\");              \n            this.router.navigate(['user-acl/list']);              \n            },\n\n            (error: any) => {\n              this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n              this.isSaving = false;\n              this.submitted = false;          \n          });\n      }\n\n      //Editing Useracl details\n      if (this.actionType == 'Edit') {\n        let data: any = {\n          namespace: this.f.namespace.value,\n          path: this.f.path.value,\n          route: this.f.route.value\n        }\n        this._api.putApiData(apiUrls.userAclUpdate(this.idUserAcl), data).subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('UserACL updated successfully', \"Updated\");             \n            this.router.navigate(['user-acl/list'])              \n            },\n            (error: any) => {\n              this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n              this.isSaving = false;\n              this.submitted = false;\n          });\n      }\n    } else {\n      return;\n    }\n\n  }\n\n  //Getting Usertypelist\n  getUsertypeList() {\n    this._api.postApiData(apiUrls.userTypeList).subscribe(\n      (data: any) => {\n        console.log(data.data)\n        let resSucc = data.data;\n        if (resSucc != '') this.UsertypeList = resSucc;\n      },\n      error => {\n\n      },\n      () => {\n\n      }\n\n    )\n  }\n\n  //Getting Useracl data using (idUserAcl)\n  getUserAcl() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.userAclDetail(this.idUserAcl)).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.UserAclData = data.data;\n        if (this.UserAclData) {\n          this.loading = false;\n          this.setUserAclData(this.UserAclData);\n        }\n      }\n    )\n  }\n\n  //Setting Useracl data in edit form\n  setUserAclData(data) {\n    this.userAclForm.patchValue({\n      'namespace': data.namespace,\n      'route': data.route,\n      'path': data.path,\n      'rule': data.rule\n    });\n  }\n  \n  //Cancel UserAcl\n  cancelUserAclcreate() {\n    this.router.navigate(['user-acl/list']);\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row page-title-div\">\n    <div class=\"col-md-6\">\n      <h2 class=\"title\">User ACL</h2>\n    </div>\n    <!-- /.col-md-6 -->\n  </div>\n  <!-- /.row -->\n  <div class=\"row breadcrumb-div\">\n    <div class=\"col-md-6\">\n      <ul class=\"breadcrumb\">\n        <li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n        <li><a [routerLink]=\"'/user-acl/list'\">User ACL</a></li>\n        <li class=\"active\">{{actionType}}</li>\n      </ul>\n    </div>\n    <!-- /.col-md-6 -->\n  </div>\n  <!-- /.row -->\n</div>\n<!-- /.container-fluid -->\n<section class=\"section\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-8 col-md-offset-2\">\n        <div class=\"panel\">\n          <div class=\"panel-heading\">\n            <div class=\"panel-title\">\n              <h5>{{title}}</h5>\n            </div>\n          </div>\n          <div class=\"panel-body\">\n            <div *ngIf=\"loading\" class=\"text-center\">\n              <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n            </div>\n            <form *ngIf=\"!loading\"[formGroup]=\"userAclForm\" (ngSubmit)=\"onSubmit()\">\n              <div *ngIf=\"loading\" class=\"text-center\">\n                <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n              </div>\n             \n              <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.namespace.errors }\">\n                <label for=\"namespace\" class=\"control-label\">Namespace</label>\n                <div class=\"\">\n                  <input type=\"text\" formControlName=\"namespace\" class=\"form-control\" placeholder=\"Namespace\"\n                    class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.namespace.errors }\" />\n                  <span *ngIf=\"submitted && f.namespace.errors\" class=\"help-block\">This field is required.</span>\n                </div>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.route.errors }\">\n                <label for=\"route\" class=\"control-label\">Route</label>\n                <div class=\"\">\n                  <input type=\"text\" formControlName=\"route\" class=\"form-control\" placeholder=\"Route\"\n                    class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.route.errors }\" />\n                  <span *ngIf=\"submitted && f.route.errors\" class=\"help-block\">This field is required.</span>\n                </div>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.path.errors }\">\n                <label for=\"path\" class=\"control-label\">Path</label>\n                <div class=\"\">\n                  <input type=\"text\" formControlName=\"path\" class=\"form-control\" placeholder=\"Path\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.path.errors }\" />\n                  <span *ngIf=\"submitted && f.path.errors\" class=\"help-block\">This field is required.</span>\n                </div>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary\">{{actionType == 'Add'? (isSaving ? 'Creating...' : 'Create') : (isSaving ? 'Updating...' : 'Update') }}\n                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n      <!-- /.col-md-8 col-md-offset-2 -->\n    </div>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update-user-acl',\n  templateUrl: './update-user-acl.component.html',\n  styleUrls: ['./update-user-acl.component.css']\n})\nexport class UpdateUserAclComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-add-user-acl [actionType]=\"'Edit'\"[title]=\"'Edit UserACL'\"></app-add-user-acl>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilityService } from '../utilities/utilities.services';\nimport { UserAcl } from '../models/user-Acl';\nimport { ApiDataServices } from '../_services/apiservices/api.service';\nimport { ConfirmdialogComponent } from '../common/dialog/confirmdialog/confirmdialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\nimport { apiUrls } from '../api-urls';\n\n\n\n@Component({\n  selector: 'app-user-acl',\n  templateUrl: './user-acl.component.html',\n  styleUrls: ['./user-acl.component.css'],\n})\nexport class UserACLComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService,\n    public api: ApiDataServices,\n    private dialog: MatDialog,\n    private _utils: UtilityService) { }\n  @ViewChild('deleteModalButton') deleteModalButton: ElementRef;\n  @ViewChild('cancelModalButton') cancelModalButton: ElementRef;\n  // userACL: UserAcl[];\n  userAclList: any = [];\n  loading = true;\n  isDeleting = false;\n  errorMessage = \"Sorry, Something went wrong\";\n  selectedUserAcl: UserAcl = new UserAcl();\n  paginationConfig: any = paginationConfig;\n\n  ngOnInit(): void {\n    this.getUserACLList();\n\n  }\n\n  //Getting Useracl list\n  getUserACLList() {\n    this.loading = true;\n    this.api.postApiData(apiUrls.userAclList).subscribe(\n      (data: any) => {\n        this.loading = false;console.log(data.meta);\n        this.userAclList = data.data;\n        this.paginationConfig.totalItems = this.userAclList.length;\n      },\n      error => {\n        this.loading = false;\n      }\n    );\n  }\n\n  //Deleting UserAcl using (idUserAcl)\n  confirmDelete(res) {\n    const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure to delete?'\n      }\n    });\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) this.deleteuseracl(res);\n      }\n    );\n  }\n  deleteuseracl(res) {\n    this.api.putApiData(apiUrls.userAclDelete(res.idUserAcl)).pipe()\n      .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.toastr.success('UserACL deleted successfully', \"Deleted\");\n          this.deleteuseraclFromList(res);\n        },\n        error => {\n\n        },\n        () => { }\n      );\n  }\n  deleteuseraclFromList(res) {\n    this.userAclList = this._utils.filterArrayObj(this.userAclList, 'idUserAcl', res.idUserAcl);\n  }\n\n  checkActive(active, type) {\n\n    if (active) {\n      return type === 'bool' ? true : 'Active';\n    } else {\n      return type === 'bool' ? false : 'Inactive';\n    }\n  }\n\n  //Function for toggle button\n  toggleActive(useracl, e ) {\n    let status = e.checked ? 'true' : 'false';\n    let active = e.checked ? '0' : '1';\n    const activeDialog = this.dialog.open(ConfirmdialogComponent, {\n        width: '400px',\n        height: '170px',\n        data: {\n            message: 'Are you sure to ' + status + ' the ' + useracl.namespace + '?'\n        }\n    });\n\n    activeDialog.afterClosed().subscribe(\n        data => {\n            (data) ? 'this.toggleActiveUser(useracl.id, e)' : this.userAclList = this._utils.changeArrayObjProp(this.userAclList, 'id', useracl.id, 'false', !e.checked);\n        }\n    );\n}\n\ntoggleActiveuseracl(id, e) {\n  let data = {\n      id: id,\n      active: e.checked ? 1 : 0\n  };\n  this.userAclList = this._utils.changeArrayObjProp(this.userAclList, 'id', id, 'false', e.checked);\n  this.api.putApiData('this._urls.userActiveUrl', data).subscribe(\n      (data: any) => {\n          let id = data.data.id;\n          this.userAclList = this._utils.changeArrayObjProp(this.userAclList, 'id', id, 'false', e.checked);\n      },\n      error => {\n\n      },\n      () => {\n\n      });\n}\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row page-title-div\">\n      <div class=\"col-md-6\">\n          <h2 class=\"title\">User ACL</h2>\n      </div>\n      <!-- /.col-md-6 -->\n      <div class=\"col-md-6 right-side\">\n          <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/user-acl/add'\">Add</a>\n      </div>\n      <!-- /.col-md-6 text-right -->\n  </div>\n  <!-- /.row -->\n  <div class=\"row breadcrumb-div\">\n      <div class=\"col-md-6\">\n          <ul class=\"breadcrumb\">\n              <li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n              <li class=\"active\">User ACL</li>\n          </ul>\n      </div>\n      <!-- /.col-md-6 -->\n  </div>\n  <!-- /.row -->\n</div>\n\n\n<section class=\"section\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-md-12\">\n              <div class=\"panel\">\n                  <div class=\"panel-heading\">\n                      <div class=\"panel-title\">\n                          <h5>User ACL</h5>\n                      </div>\n                      <div *ngIf=\"!loading && userAclList.length > 0\" class=\"text-right\">\n                          <app-pagination [totalItems]=\"userAclList.length\" [paginationConfig]=\"paginationConfig\">\n                          </app-pagination>\n                      </div>\n                  </div>\n                  <div class=\"panel-body p-20\">\n                      <div *ngIf=\"loading\" class=\"text-center\">\n                          <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                      </div>\n                      \n                      <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                          <thead>\n                              <tr>\n                                  <th>Sr. #</th>\n                                  <th>Namespace</th>\n                                  <th>Route</th>\n                                  <th>Path</th>\n                                  <th>Status</th>\n                                  <th>Action</th>\n                              </tr>\n                          </thead>\n                          <tbody>\n                              <tr *ngFor=\"let userACL of userAclList | paginate: paginationConfig let i = index\">\n                                <td>{{(((paginationConfig.currentPage - 1 )*(paginationConfig.itemsPerPage))) + (i + 1)}}</td>\n                                  <td scope=\"row\">{{userACL.namespace}}</td>\n                                  <td>{{userACL.route}}</td>\n                                  <td>{{userACL.path}}</td>\n                                  <td><mat-slide-toggle [(ngModel)]=\"userACL.isActive\"  (change)=\"toggleActive(userACL, $event)\"></mat-slide-toggle></td>\n                                  <td>\n                                      <a class=\"btn btn-default icon-only margin\"\n                                          [routerLink]=\"['/user-acl/update',userACL.idUserAcl]\"><i\n                                              class=\"fa fa-pencil\"></i></a>\n                                      <button type=\"button\" class=\"btn btn-danger icon-only\"\n                                          (click)=\"confirmDelete(userACL)\"><i class=\"fa fa-trash-o\"></i></button>\n                                  </td>\n                              </tr>\n                          </tbody>\n                      </table>\n                      <div *ngIf=\"!loading && userAclList.length == 0\" class=\"text-center\">\n                          <h4>No data found!</h4>\n                      </div>\n                  </div>\n              </div>\n              <!-- /.panel -->\n          </div>\n      </div>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiurlsService } from 'src/app/_services/api-urls/apiUrls.service';\n\n@Component({\n  selector: 'app-add-user-type',\n  templateUrl: './add-user-type.component.html',\n  styleUrls: ['./add-user-type.component.css']\n})\nexport class AddUserTypeComponent implements OnInit {\n\n  constructor(\n    private api: ApiDataServices, \n    private url: ApiurlsService, \n    private formBuilder: FormBuilder,\n    private route: Router) { }\n\n  userTypeForm: FormGroup;\n  submitted = false;\n  isError = false;\n  errorMessage = \"\";\n  isSaving = false;\n\n  ngOnInit(): void {\n    this.userTypeForm = this.formBuilder.group({\n      userTypeName: ['', Validators.required],\n      userTypeNum: ['', Validators.required],\n      userTypeSlug: ['', Validators.required]\n    });\n  }\n\n  \n  // convenience getter for easy access to form fields\n  get f() { return this.userTypeForm.controls; }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.userTypeForm.invalid) {\n      return;\n    }\n    this.isError = false;\n    this.isSaving = true;\n    this.api.postApiData(this.url.userTypeCreate, this.userTypeForm.getRawValue()).pipe()\n    .subscribe(\n        (data: any) => {\n          this.isSaving = false;\n          this.submitted = false;\n          this.route.navigate(['/user-types/list']);\n        },\n        (error: any) => {\n          debugger\n          this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n          this.isSaving = false;\n          this.submitted = false;\n          this.isError = true;\n        });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">User Type</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li><a [routerLink]=\"'/user-types/list'\">User Types</a></li>\n\t\t\t\t<li class=\"active\">Add</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container-fluid -->\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Add New User Type</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <form [formGroup]=\"userTypeForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userTypeName.errors }\">\n                                <label for=\"UserTypeName\" class=\"control-label\">User Type Name</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"userTypeName\" class=\"form-control\" placeholder=\"User Type Name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userTypeName.errors }\" />\n                                    <span *ngIf=\"submitted && f.userTypeName.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userTypeNum.errors }\">\n                                <label for=\"usertypenum\" class=\"control-label\">User Type Number</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"userTypeNum\" class=\"form-control\" placeholder=\"User Type Number\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userTypeNum.errors }\" />\n                                    <span *ngIf=\"submitted && f.userTypeNum.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userTypeSlug.errors }\">\n                                <label for=\"usertypeslug\" class=\"control-label\">User Type Slug</label>\n                                <div class=\"\">\n                                    <input type=\"text\" formControlName=\"userTypeSlug\" class=\"form-control\" placeholder=\"User Type Slug\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userTypeSlug.errors }\" />\n                                    <span *ngIf=\"submitted && f.userTypeSlug.errors\" class=\"help-block\">This field is required.</span>\n                                </div>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">{{isSaving ? 'Creating...' : 'Create' }} \n                                <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserType } from 'src/app/models/user-type';\nimport { UserAcl } from 'src/app/models/user-Acl';\nimport { apiUrls } from 'src/app/api-urls';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiurlsService } from 'src/app/_services/api-urls/apiUrls.service';\n@Component({\n  selector: 'app-edit-user-type',\n  templateUrl: './edit-user-type.component.html',\n  styleUrls: ['./edit-user-type.component.css']\n})\nexport class EditUserTypeComponent implements OnInit {\n\n  constructor(\n    private api: ApiDataServices, \n    private url: ApiurlsService, \n    private formBuilder: FormBuilder,\n    private route: Router, \n    private actRoute: ActivatedRoute,\n    private toastr: ToastrService) { }\n\n  userTypeForm: FormGroup;\n  submitted = false;\n  isError = false;\n  loading = true;\n  isSaving = false;\n  errorMessage = \"\";\n  userType: UserType;\n  ngOnInit(): void {\n    this.loading = true;\n    this.userType = new UserType();\n    this.actRoute.paramMap.subscribe(params => {\n      this.userType.idUserType = params.get('id');\n      this.getUserType();\n    });\n  }\n\n  getUserType(){\n    this.loading = true;\n    this.api.postApiData(this.url.userTypeGet(this.userType.idUserType)).pipe()\n    .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.userType = data.data;\n          this.getUserAcls();\n          this.userTypeForm = this.formBuilder.group({\n            userTypeName: [this.userType.userTypeName, Validators.required],\n            userTypeNum: [this.userType.userTypeNum, Validators.required],\n            userTypeSlug: [this.userType.userTypeSlug, Validators.required]\n          });\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n          this.errorMessage = error && error.error.errors.error ? error.error.errors.error : 'Sorry, something went wrong';\n        });\n  }\n  \n  // convenience getter for easy access to form fields\n  get f() { return this.userTypeForm.controls; }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.userTypeForm.invalid) {\n      return;\n    }\n    this.isError = false;\n    this.isSaving = true;\n    this.api.putApiData(this.url.userTypeUpdate(this.userType.idUserType), this.userTypeForm.getRawValue()).pipe()\n    .subscribe(\n        (data: any) => {\n          this.isSaving = false;\n          this.submitted = false;\n          this.route.navigate(['/user-types/list']);\n        },\n        (error:any) => {\n          this.isSaving = false;\n          this.submitted = false;\n          this.isError = true;\n          this.errorMessage = 'Sorry, something went wrong.';\n        });\n  }\n\n  //#region User ACL\n\n  loadingAcls = true;\n  isSavingAcls = false;\n  userAcls: UserAcl[];\n  selectedUserAcls: UserAcl[];\n  getUserAcls(){\n    this.userAcls = [];\n    this.selectedUserAcls = [];\n    this.loadingAcls = true;\n    this.api.postApiData(apiUrls.userAclList).pipe()\n    .subscribe(\n        (data: any) => {\n          this.userAcls = data.data\n          let userTypeUserAcls = this.userType.userAcls;\n          for(let acl of this.userAcls){\n            acl.isChecked = userTypeUserAcls.find(a => a.idUserAcl == acl.idUserAcl) != null;\n          }\n          this.loadingAcls = false;\n        },\n        error => {\n          this.loadingAcls = false;\n          this.isError = true;\n          this.errorMessage = error && error.error.errors.error ? error.error.errors.error : 'Sorry, something went wrong';\n        });\n  }\n\n  changeUserAclSelection(){\n    this.selectedUserAcls = this.userAcls.filter((value, index) => {\n      return value.isChecked\n    });\n  }\n\n  saveAcls(){\n    let data = {\n      acls: this.selectedUserAcls.filter(a => a.isChecked == true).map(m => m.idUserAcl)\n    }\n    this.isSavingAcls = true;\n    this.api.putApiData(apiUrls.userTypeSyncAcl(this.userType.idUserType), data).pipe()\n    .subscribe(\n        (data: any) => {\n          this.isSavingAcls = false;\n          this.toastr.success(`${this.userType.userTypeName} synched successfully`, 'Done');\n          this.route.navigate(['/user-types/list']);\n        },\n        (error:any) => {\n          this.isSavingAcls = false;\n          this.isError = true;\n          this.errorMessage = error && error.error.errors.error ? error.error.errors.error : 'Sorry, something went wrong.';\n        });\n  }\n\n  //#endregion\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">User Type</h2>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li><a [routerLink]=\"'/user-types/list'\">User Types</a></li>\n\t\t\t\t<li class=\"active\">Edit</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container-fluid -->\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Edit User Type</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loading\" class=\"text-center\"><h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <form *ngIf=\"!loading\" [formGroup]=\"userTypeForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userTypeName.errors }\">\n                                    <label for=\"userTypeName\" class=\"control-label\">User Type Name</label>\n                                    <div class=\"\">\n                                        <input type=\"text\" formControlName=\"userTypeName\" class=\"form-control\" placeholder=\"User Type Name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userTypeName.errors }\" />\n                                        <span *ngIf=\"submitted && f.userTypeName.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userTypeNum.errors }\">\n                                    <label for=\"userTypeNum\" class=\"control-label\">User Type Number</label>\n                                    <div class=\"\">\n                                        <input type=\"text\" formControlName=\"userTypeNum\" class=\"form-control\" placeholder=\"User Type Number\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userTypeNum.errors }\" />\n                                        <span *ngIf=\"submitted && f.userTypeNum.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userTypeSlug.errors }\">\n                                    <label for=\"userTypeSlug\" class=\"control-label\">User Type Slug</label>\n                                    <div class=\"\">\n                                        <input type=\"text\" formControlName=\"userTypeSlug\" class=\"form-control\" placeholder=\"User Type Slug\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.usertypeslug.errors }\" />\n                                        <span *ngIf=\"submitted && f.userTypeSlug.errors\" class=\"help-block\">This field is required.</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 text-right\">\n                                <button type=\"submit\" class=\"btn btn-primary\">{{isSaving ? 'Saving...' : 'Save' }} \n                                    <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>\n\n<!-- UserAcls -->\n\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>Sync {{userType.userTypeName}} with User ACL</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div *ngIf=\"loadingAcls\" class=\"text-center\"><h4>Loading ACLs...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <div *ngIf=\"!loadingAcls\">\n                            <div class=\"form-group\">\n                                <label for=\"userTypeName\" class=\"control-label\">User ACLs</label>\n                                <div class=\"col-sm-12\" *ngFor=\"let acl of userAcls\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"acl.isChecked\" (change)=\"changeUserAclSelection()\"> {{acl.path}}\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 text-right\">\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveAcls()\">{{isSavingAcls ? 'Saving...' : 'Save' }} \n                                    <i *ngIf=\"isSavingAcls\" class='fa fa-spinner fa-spin'></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /.col-md-8 col-md-offset-2 -->\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserType } from 'src/app/models/user-type';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\nimport { ApiurlsService } from 'src/app/_services/api-urls/apiUrls.service';\n@Component({\n  selector: 'app-user-type-list',\n  templateUrl: './user-type-list.component.html',\n  styleUrls: ['./user-type-list.component.css']\n})\nexport class UserTypeListComponent implements OnInit {\n\n  constructor(private urls: ApiurlsService, private dialog: MatDialog, private api: ApiDataServices, private toastr: ToastrService) { }\n  @ViewChild('deleteModalButton') deleteModalButton: ElementRef;\n  @ViewChild('cancelModalButton') cancelModalButton: ElementRef;\n  userTypes: UserType[];\n  loading = true;\n  isDeleting = false;\n  isError = false;\n  errorMessage = \"Sorry, Something went wrong\";\n  selectedUserType: UserType = new UserType();\n  paginationConfig: any = paginationConfig;\n  ngOnInit(): void {\n    this.userTypes = [];\n    this.getUserTypes();\n  }\n\n  getUserTypes(){\n    this.loading = true;\n    this.api.postApiData(this.urls.userTypeList).pipe()\n    .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.userTypes = data.data;\n          this.paginationConfig.totalItems = this.userTypes.length;\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n        });\n  }\n\n  showDeleteModal(userType) {\n    // this.isDeleting = false;\n    // let inputElement: HTMLElement = this.deleteModalButton.nativeElement as HTMLElement;\n    // inputElement.click();\n    const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure, you want to delete?'\n      }\n    });\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) {\n          this.selectedUserType = userType;\n          this.delete();\n        }\n      }\n    );\n  }\n  delete(){\n    if(this.selectedUserType){\n      this.isDeleting = true;\n      this.api.putApiData(this.urls.userTypeDelete(this.selectedUserType.idUserType)).pipe()\n      .subscribe(\n        (data: any) => {\n          this.isDeleting = false;\n          // let inputElement: HTMLElement = this.cancelModalButton.nativeElement as HTMLElement;\n          // inputElement.click();\n          this.toastr.success('UserType deleted successfully', 'Deleted');\n          let index = this.userTypes.indexOf(this.selectedUserType);\n          if(index >= -1){\n            this.userTypes.splice(index, 1);\n          }\n          this.selectedUserType = new UserType();\n        },\n        error => {\n          this.loading = false;\n          this.isError = true;\n        });\n    } else {\n      alert('User not found');\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">User Type</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/user-types/add'\">Add</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n\t\t\t\t<li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n\t\t\t\t<li class=\"active\">User Type</li>\n\t\t\t</ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>User Types</h5>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"loading\" class=\"text-center\"><h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4></div>\n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>User Type Id</th>\n                                    <th>Name</th>\n                                    <th>Number</th>\n                                    <th>Slug</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let user of userTypes | paginate: paginationConfig let i = index\">\n                                    <td>{{i + 1}}</td>\n                                    <td scope=\"row\">{{user.idUserType}}</td>\n                                    <td>{{user.userTypeName}}</td>\n                                    <td>{{user.userTypeNum}}</td>\n                                    <td>{{user.userTypeSlug}}</td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only mr-10\" [routerLink]=\"['/user-types/edit',user.idUserType]\"><i class=\"fa fa-pencil\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-danger icon-only\" (click)=\"showDeleteModal(user)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && userTypes.length == 0\" class=\"text-center\"><h4>No data found!</h4></div>\n                        <div *ngIf=\"!loading && userTypes.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"userTypes.length\" [paginationConfig]=\"paginationConfig\"></app-pagination>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- Delete Modal tigger button -->\n<input type=\"button\" style=\"display:none;\" #deleteModalButton id=\"deleteModalButton\" (click)=\"defaultModal.show()\" />\n<!-- Delete Modal -->\n\n<div class=\"modal fade\" bsModal id=\"myModal\" tabindex=\"-1\" role=\"dialog\" #defaultModal=\"bs-modal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4>Delete</h4>\n            </div>\n            <div class=\"modal-body\">\n                <h4 class=\"text-center\">Are you sure you want to delete {{selectedUserType.userTypeName}} ? </h4>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"btn-group\" role=\"group\">\n                    <button type=\"button\" #cancelModalButton class=\"btn btn-gray mr-10\" (click)=\"defaultModal.hide()\">Cancel</button>\n                    <button type=\"button\" class=\"btn bg-danger\" (click)=\"delete()\">{{isDeleting ? 'Deleting...' : 'Delete'}} \n                        <i *ngIf=\"isDeleting\" class=\"fa fa-spinner fa-spin\"></i>\n                    </button>\n                </div>\n                <!-- /.btn-group -->\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.css']\n})\nexport class UserAddComponent implements OnInit {\n\n  constructor(\n    private _ac: ActivatedRoute,\n    private _fb: FormBuilder,\n    private _api: ApiDataServices,\n    private _router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  @Input() actionType: string = 'Add';\n  @Input() title: string = 'Add New User';\n  userForm: FormGroup;\n  idUser: any = '';\n  submitted = false;\n  isError = false;\n  isAdd = true;\n  loading = false;\n  errorMessage = \"\";\n  isSaving = false;\n  userData: any = '';\n  usertypeList: any[];\n\n\n  ngOnInit() {\n    this.createUserFormInit();\n    this.getusertypeList();\n    this._ac.params.subscribe(\n      params => {\n        this.idUser = params.id;\n        if (this.idUser) {\n          this.isAdd = false;\n          this.getUser();\n        }\n      }\n    )\n  }\n\n  //Initializing Userform for validation\n  createUserFormInit() {\n    this.userForm = this._fb.group({\n      'idUserType': ['', [Validators.required]],\n      'userName': ['', [Validators.required]],\n      'email': ['', this.actionType == 'Add' ? [Validators.required] : []],\n      'password': ['', this.actionType == 'Add' ? [Validators.required] : []]\n\n    });\n  }\n\n  get f() { return this.userForm.controls; }\n\n  //Calling Submit function\n  onSubmit() {\n    this.submitted = true;\n\n    //Checking form validaton\n    if (this.userForm.valid) {\n      this.isSaving = true;\n\n      //Creating Users\n      if (this.actionType == 'Add') {\n        this.isError = false;\n        let data: any = {\n          idUserType: this.f.idUserType.value,\n          userName: this.f.userName.value,\n          email: this.f.email.value,\n          password: this.f.password.value\n        }\n        this._api.postApiData(apiUrls.userCreate, data).subscribe(\n          (data: any) => {\n            console.log(data);\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('User created successfully', \"Created\");\n            this._router.navigate(['user/list']);\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.isSaving = false;\n            this.submitted = false;\n            this.isError = true;\n          });\n      }\n\n      //Editing Users details\n      if (this.actionType == 'Edit') {\n        let data: any = {\n          idUserType: this.f.idUserType.value,\n          userName: this.f.userName.value\n        }\n        this._api.putApiData(apiUrls.userUpdate(this.idUser), data).subscribe(\n          (data: any) => {\n            this.isSaving = false;\n            this.submitted = false;\n            this.toastr.success('User Updated successfully', \"Updated\");\n            this._router.navigate(['user/list'])\n          },\n          (error: any) => {\n            this.errorMessage = error && error.message ? error.message : 'Sorry, something went wrong.';\n            this.isSaving = false;\n            this.submitted = false;\n            this.isError = true;\n          });\n\n      }\n    } else {\n      return;\n    }\n\n  }\n\n  //Getting User data using (idUser)\n  getUser() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.userGet(this.idUser)).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.userData = data.data;\n        if (this.userData) {\n          this.loading = false;\n          this.setuserData(this.userData);\n        }\n      }\n    )\n  }\n\n  //Setting User data in edit form\n  setuserData(data) {\n    this.userForm.patchValue({\n      'idUserType': data.idUserType,\n      'userName': data.userName,\n      'email': data.email\n    });\n  }\n\n  //Getting Usertypelist\n  getusertypeList() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.userTypeList).subscribe(\n      (data: any) => {\n        this.loading = false;\n        this.usertypeList = data.data;\n      },\n      (error:any) => {\n        this.loading = false;\n      }\n    )\n  }\n\n  //Cancel User\n  cancelUsercreate() {\n    this._router.navigate(['user/list']);\n  }\n\n\n\n}","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n      <div class=\"col-md-6\">\n        <h2 class=\"title\">User</h2>\n      </div>\n      <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n      <div class=\"col-md-6\">\n        <ul class=\"breadcrumb\">\n          <li><a [routerLink]=\"'/dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n          <li><a [routerLink]=\"'/user/list'\">User</a></li>\n          <li class=\"active\">{{actionType}}</li>\n        </ul>\n      </div>\n      <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container-fluid -->\n<section class=\"section\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-8 col-md-offset-2\">\n          <div class=\"panel\">\n            <div class=\"panel-heading\">\n              <div class=\"panel-title\">\n                <h5>{{title}}</h5>\n              </div>\n            </div>\n            <div class=\"panel-body\">\n                <div *ngIf=\"loading\" class=\"text-center\">\n                  <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                </div>\n              <form *ngIf=\"!loading\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n\n\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.idUserType.errors }\">\n                    <label for=\"idUserType\" class=\"control-label\">User Type</label>\n                    <select formControlName=\"idUserType\" class=\"form-control\">\n                       <option *ngFor=\"let usertype of usertypeList\" value=\"{{usertype.idUserType}}\">\n                            {{usertype.userTypeName}}</option>\n                    </select>\n                    <span *ngIf=\"submitted && f.idUserType.errors\" class=\"help-block\">This field is\n                        required.</span>\n                </div>\n\n\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.userName.errors }\">\n                  <label for=\"userName\" class=\"control-label\">UserName</label>\n                  <div class=\"\">\n                    <input type=\"text\" formControlName=\"userName\" class=\"form-control\" placeholder=\"userName\"\n                      class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\" />\n                    <span *ngIf=\"submitted && f.userName.errors\" class=\"help-block\">This field is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.email.errors }\">\n                  <label for=\"email\" class=\"control-label\">Email</label>\n                  <div class=\"\">\n                    <input type=\"text\"  formControlName=\"email\" class=\"form-control\" placeholder=\"email\" class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [readonly]=\"!isAdd\"/>\n                    <span *ngIf=\"submitted && f.email.errors\" class=\"help-block\">This field is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"form-group\" *ngIf=\"isAdd\"[ngClass]=\"{ 'has-error': submitted && f.password.errors }\">\n                  <label for=\"password\" class=\"control-label\">Password</label>\n                  <div class=\"\">\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"password\" class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <span *ngIf=\"submitted && f.password.errors\" class=\"help-block\">This field is required.</span>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">{{actionType == 'Add'? (isSaving ? 'Creating...' : 'Create') : (isSaving ? 'Updating...' : 'Update') }}\n                  <i *ngIf=\"isSaving\" class='fa fa-spinner fa-spin'></i>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- /.col-md-8 col-md-offset-2 -->\n      </div>\n    </div>\n  </section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-user-add [actionType]=\"'Edit'\"[title]=\"'Edit User'\"></app-user-add>\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ApiDataServices } from 'src/app/_services/apiservices/api.service';\nimport { UtilityService } from 'src/app/utilities/utilities.services';\nimport { ConfirmdialogComponent } from 'src/app/common/dialog/confirmdialog/confirmdialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { ToastrService } from 'ngx-toastr';\nimport { paginationConfig } from 'src/app/constants';\nimport { apiUrls } from 'src/app/api-urls';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  constructor(\n    private _api: ApiDataServices,\n    private dialog: MatDialog,\n    private _utils: UtilityService,\n    private toastr: ToastrService\n  ) { }\n\n  userList: any = [];\n  loading = true;\n  paginationConfig: any = paginationConfig;\n\n  ngOnInit(): void {\n    this.getuserList();\n\n  }\n  \n  //Getting Userlist\n  getuserList() {\n    this.loading = true;\n    this._api.postApiData(apiUrls.userList).pipe().subscribe(\n      (data: any) => {\n        this.loading = false;console.log(data.meta);\n        this.userList = data.data;\n        this.paginationConfig.totalItems = this.userList.length;\n      },\n      error => {\n        this.loading = false;\n      }\n    );\n  }\n  \n  //Deleting User using (idUser)\n  confirmDelete(res) {\n    const deleteDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure to delete?'\n      }\n    });\n    deleteDialog.afterClosed().subscribe(\n      data => {\n        if (data) this.deleteUser(res);\n      }\n    );\n  }\n  deleteUser(res) {\n       this._api.putApiData(apiUrls.userDelete(res.idUser)).pipe()\n      .subscribe(\n        (data: any) => {\n          this.loading = false;\n          this.toastr.success('User deleted successfully', \"Deleted\");\n          this.deleteuserFromList(res);          \n        },\n        error => {\n\n        },\n        () => { }\n      );\n  }\n  deleteuserFromList(res) {\n    this.userList = this._utils.filterArrayObj(this.userList, 'idUser', res.idUser);\n  }\n\n  //Function for toggle button\n  toggleActive(user, e) {\n    let status = e.checked ? 'true' : 'false';\n    let active = e.checked ? '0' : '1';\n    const activeDialog = this.dialog.open(ConfirmdialogComponent, {\n      width: '400px',\n      height: '170px',\n      data: {\n        message: 'Are you sure to ' + status + ' the ' + user.userName + '?'\n      }\n    });\n\n    activeDialog.afterClosed().subscribe(\n      data => {\n        (data) ? 'this.toggleActiveUser(user.id, e)' : this.userList = this._utils.changeArrayObjProp(this.userList, 'id', user.id, 'false', !e.checked);\n      }\n    );\n  }\n\n  toggleActiveUser(id, e) {\n    let data = {\n      id: id,\n      active: e.checked ? 1 : 0\n    };\n    this.userList = this._utils.changeArrayObjProp(this.userList, 'id', id, 'false', e.checked);\n    this._api.putApiData('this._urls.userActiveUrl', data).subscribe(\n      (data: any) => {\n        let id = data.data.id;\n        this.userList = this._utils.changeArrayObjProp(this.userList, 'id', id, 'false', e.checked);\n      },\n      error => {\n\n      },\n      () => {\n\n      });\n  }\n \n}\n","<div class=\"container-fluid\">\n    <div class=\"row page-title-div\">\n        <div class=\"col-md-6\">\n            <h2 class=\"title\">Users</h2>\n        </div>\n        <!-- /.col-md-6 -->\n        <div class=\"col-md-6 right-side\">\n            <a class=\"btn bg-black toggle-code-handle\" [routerLink]=\"'/user/add'\">Add</a>\n        </div>\n        <!-- /.col-md-6 text-right -->\n    </div>\n    <!-- /.row -->\n    <div class=\"row breadcrumb-div\">\n        <div class=\"col-md-6\">\n            <ul class=\"breadcrumb\">\n                <li><a [routerLink]=\"'dashboard'\"><i class=\"fa fa-home\"></i> Home</a></li>\n                <li class=\"active\">Users</li>\n            </ul>\n        </div>\n        <!-- /.col-md-6 -->\n    </div>\n    <!-- /.row -->\n</div>\n<section class=\"section\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"panel\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            <h5>UserList</h5>\n                        </div>\n\n                        <div *ngIf=\"!loading && userList.length > 0\" class=\"text-right\">\n                            <app-pagination [totalItems]=\"userList.length\" [paginationConfig]=\"paginationConfig\">\n                            </app-pagination>\n                        </div>\n                    </div>\n                    <div class=\"panel-body p-20\">\n                        <div *ngIf=\"loading\" class=\"text-center\">\n                            <h4>Loading...<i class=\"fa fa-spinner fa-spin\"></i></h4>\n                        </div>\n\n                        <table *ngIf=\"!loading\" class=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Sr. #</th>\n                                    <th>User Type</th>\n                                    <th>User Name</th>\n                                    <th>Email</th>\n                                    <th>Status</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let user of userList | paginate: paginationConfig let i = index\">\n                                    <td>{{(((paginationConfig.currentPage - 1 )*(paginationConfig.itemsPerPage))) + (i + 1)}}</td>\n                                    <td>{{user.userType}}</td>\n                                    <td>{{user.userName}}</td>\n                                    <td>{{user.email }}</td>\n                                    <td>\n                                        <mat-slide-toggle color=\"$mat-green\" [(ngModel)]=\"user.isActive\"\n                                            (change)=\"toggleActive(user, $event)\"></mat-slide-toggle>\n                                    </td>\n                                    <td>\n                                        <a class=\"btn btn-default icon-only margin\"\n                                            [routerLink]=\"['/user/edit',user.idUser]\"><i class=\"fa fa-pencil\"></i></a>\n\n                                        <button type=\"button\" class=\"btn btn-danger icon-only\"\n                                            (click)=\"confirmDelete(user)\"><i class=\"fa fa-trash-o\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div *ngIf=\"!loading && userList.length == 0\" class=\"text-center\">\n                            <h4>No data found!</h4>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.panel -->\n            </div>\n        </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class UtilityService {\n\n  constructor() {\n\n  }\n\n  filterArrayObj(arr, prop, val) {\n    let filteredVal = arr.filter(item => {\n      return item[prop] != val;\n    });\n    return filteredVal;\n  }\n\n\n  changeArrayObjProp(arr, match, value, prop, val) {\n    arr.forEach(function (item, index, array) {\n      if (item[match] == value) item[prop] = val;\n    });\n    return arr;\n  }\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://xoomlapi.business-software.in/api'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}