{"version":3,"file":"focus.directive.js","sources":["../../../src/focus.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,KAAK,EAIN,MAAM,eAAA,CAAgB;AAEvB;AACA;AACA,GAAG;;AAEH;AAAoC,IAGlC,wBAAoB,GAAe;AAAI,QAAnB,QAAG,GAAH,GAAG,CAAY;AAAC,IAAE,CAAC;AACzC,IACE,oCAAW,GAAX,UAAY,OAAsB;AAAI,QACpC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;AACrD,YAAM,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACrC,QAAI,CAAC;AACL,IAAE,CAAC,CAKD;IAJK,JAKP,IAAA,kBAAkB;MALD,GAA0B,UAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,7CAK1B,IAAO,6BAAc,GAAmE,cAAM,OAAA;QAJ5F,QAAQ,EAAE,YAAY,9BAKxB,QAAA,EAAC,IAAI,EAAE,UAAU,GAAG;AACpB,KAAC,EAF6F,CAE7F,CAAC;OALD,EAAG,EAAE,OACL,lBAKD,IAAO,6BAAc,GAA2C;AAChE,QAAA,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC9B,KAAC;;;;;;;;;;oBAAC;AACF,IAAA,qBAAC;AAED,CAxBA,AAsBC,IAAA;AACD,SAvBa,cAAc;AAAI","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer,\n  SimpleChanges\n} from '@angular/core';\n\n/**\n * A helper directive to focus buttons. You will only need this if using a custom template\n */\n\nexport class FocusDirective implements OnChanges {\n   mwlFocus: boolean;\n\n  constructor(private elm: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.mwlFocus && this.mwlFocus === true) {\n      this.elm.nativeElement.focus();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mwlFocus]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mwlFocus': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}