import { Directive, ElementRef, Input } from '@angular/core';
/**
 * A helper directive to focus buttons. You will only need this if using a custom template
 */
import * as ɵngcc0 from '@angular/core';
var FocusDirective = (function () {
    function FocusDirective(elm) {
        this.elm = elm;
    }
    FocusDirective.prototype.ngOnChanges = function (changes) {
        if (changes.mwlFocus && this.mwlFocus === true) {
            this.elm.nativeElement.focus();
        }
    };
    /** @nocollapse */
    FocusDirective.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    FocusDirective.propDecorators = {
        'mwlFocus': [{ type: Input },],
    };
FocusDirective.ɵfac = function FocusDirective_Factory(t) { return new (t || FocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FocusDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FocusDirective, selectors: [["", "mwlFocus", ""]], inputs: { mwlFocus: "mwlFocus" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusDirective, [{
        type: Directive,
        args: [{
                selector: '[mwlFocus]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { mwlFocus: [{
            type: Input
        }] }); })();
    return FocusDirective;
}());
export { FocusDirective };

//# sourceMappingURL=focus.directive.js.map